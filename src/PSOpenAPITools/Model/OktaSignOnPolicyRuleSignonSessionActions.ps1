#
# Okta Management
# Allows customers to easily access the Okta Management APIs
# Version: 3.0.0
# Contact: devex-public@okta.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER MaxSessionIdleMinutes
No description available.
.PARAMETER MaxSessionLifetimeMinutes
No description available.
.PARAMETER UsePersistentCookie
No description available.
.OUTPUTS

OktaSignOnPolicyRuleSignonSessionActions<PSCustomObject>
#>

function Initialize-OktaSignOnPolicyRuleSignonSessionActions {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${MaxSessionIdleMinutes},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${MaxSessionLifetimeMinutes},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${UsePersistentCookie} = $false
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => OktaSignOnPolicyRuleSignonSessionActions' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "maxSessionIdleMinutes" = ${MaxSessionIdleMinutes}
            "maxSessionLifetimeMinutes" = ${MaxSessionLifetimeMinutes}
            "usePersistentCookie" = ${UsePersistentCookie}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to OktaSignOnPolicyRuleSignonSessionActions<PSCustomObject>

.DESCRIPTION

Convert from JSON to OktaSignOnPolicyRuleSignonSessionActions<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

OktaSignOnPolicyRuleSignonSessionActions<PSCustomObject>
#>
function ConvertFrom-JsonToOktaSignOnPolicyRuleSignonSessionActions {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => OktaSignOnPolicyRuleSignonSessionActions' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in OktaSignOnPolicyRuleSignonSessionActions
        $AllProperties = ("maxSessionIdleMinutes", "maxSessionLifetimeMinutes", "usePersistentCookie")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "maxSessionIdleMinutes"))) { #optional property not found
            $MaxSessionIdleMinutes = $null
        } else {
            $MaxSessionIdleMinutes = $JsonParameters.PSobject.Properties["maxSessionIdleMinutes"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "maxSessionLifetimeMinutes"))) { #optional property not found
            $MaxSessionLifetimeMinutes = $null
        } else {
            $MaxSessionLifetimeMinutes = $JsonParameters.PSobject.Properties["maxSessionLifetimeMinutes"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "usePersistentCookie"))) { #optional property not found
            $UsePersistentCookie = $null
        } else {
            $UsePersistentCookie = $JsonParameters.PSobject.Properties["usePersistentCookie"].value
        }

        $PSO = [PSCustomObject]@{
            "maxSessionIdleMinutes" = ${MaxSessionIdleMinutes}
            "maxSessionLifetimeMinutes" = ${MaxSessionLifetimeMinutes}
            "usePersistentCookie" = ${UsePersistentCookie}
        }

        return $PSO
    }

}

