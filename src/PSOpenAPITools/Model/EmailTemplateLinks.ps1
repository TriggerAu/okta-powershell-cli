#
# Okta Management
# Allows customers to easily access the Okta Management APIs
# Version: 3.0.0
# Contact: devex-public@okta.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

Links to resources related to this email template.

.PARAMETER Self
No description available.
.PARAMETER Settings
No description available.
.PARAMETER DefaultContent
No description available.
.PARAMETER Customizations
No description available.
.PARAMETER Test
No description available.
.OUTPUTS

EmailTemplateLinks<PSCustomObject>
#>

function Initialize-EmailTemplateLinks {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${Self},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${Settings},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${DefaultContent},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${Customizations},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${Test}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => EmailTemplateLinks' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "self" = ${Self}
            "settings" = ${Settings}
            "defaultContent" = ${DefaultContent}
            "customizations" = ${Customizations}
            "test" = ${Test}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to EmailTemplateLinks<PSCustomObject>

.DESCRIPTION

Convert from JSON to EmailTemplateLinks<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

EmailTemplateLinks<PSCustomObject>
#>
function ConvertFrom-JsonToEmailTemplateLinks {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => EmailTemplateLinks' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in EmailTemplateLinks
        $AllProperties = ("self", "settings", "defaultContent", "customizations", "test")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "self"))) { #optional property not found
            $Self = $null
        } else {
            $Self = $JsonParameters.PSobject.Properties["self"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "settings"))) { #optional property not found
            $Settings = $null
        } else {
            $Settings = $JsonParameters.PSobject.Properties["settings"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "defaultContent"))) { #optional property not found
            $DefaultContent = $null
        } else {
            $DefaultContent = $JsonParameters.PSobject.Properties["defaultContent"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "customizations"))) { #optional property not found
            $Customizations = $null
        } else {
            $Customizations = $JsonParameters.PSobject.Properties["customizations"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "test"))) { #optional property not found
            $Test = $null
        } else {
            $Test = $JsonParameters.PSobject.Properties["test"].value
        }

        $PSO = [PSCustomObject]@{
            "self" = ${Self}
            "settings" = ${Settings}
            "defaultContent" = ${DefaultContent}
            "customizations" = ${Customizations}
            "test" = ${Test}
        }

        return $PSO
    }

}

