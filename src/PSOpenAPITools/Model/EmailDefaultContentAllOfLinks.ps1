#
# Okta Management
# Allows customers to easily access the Okta Management APIs
# Version: 3.0.0
# Contact: devex-public@okta.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

Links to resources related to this email template's default content.

.PARAMETER Self
No description available.
.PARAMETER Template
No description available.
.PARAMETER Preview
No description available.
.PARAMETER Test
No description available.
.OUTPUTS

EmailDefaultContentAllOfLinks<PSCustomObject>
#>

function Initialize-EmailDefaultContentAllOfLinks {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${Self},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${Template},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${Preview},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${Test}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => EmailDefaultContentAllOfLinks' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "self" = ${Self}
            "template" = ${Template}
            "preview" = ${Preview}
            "test" = ${Test}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to EmailDefaultContentAllOfLinks<PSCustomObject>

.DESCRIPTION

Convert from JSON to EmailDefaultContentAllOfLinks<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

EmailDefaultContentAllOfLinks<PSCustomObject>
#>
function ConvertFrom-JsonToEmailDefaultContentAllOfLinks {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => EmailDefaultContentAllOfLinks' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in EmailDefaultContentAllOfLinks
        $AllProperties = ("self", "template", "preview", "test")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "self"))) { #optional property not found
            $Self = $null
        } else {
            $Self = $JsonParameters.PSobject.Properties["self"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "template"))) { #optional property not found
            $Template = $null
        } else {
            $Template = $JsonParameters.PSobject.Properties["template"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "preview"))) { #optional property not found
            $Preview = $null
        } else {
            $Preview = $JsonParameters.PSobject.Properties["preview"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "test"))) { #optional property not found
            $Test = $null
        } else {
            $Test = $JsonParameters.PSobject.Properties["test"].value
        }

        $PSO = [PSCustomObject]@{
            "self" = ${Self}
            "template" = ${Template}
            "preview" = ${Preview}
            "test" = ${Test}
        }

        return $PSO
    }

}

