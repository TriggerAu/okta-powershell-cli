#
# Okta Management
# Allows customers to easily access the Okta Management APIs
# Version: 3.0.0
# Contact: devex-public@okta.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER PhoneExtension
No description available.
.PARAMETER PhoneNumber
No description available.
.OUTPUTS

CallUserFactorProfile<PSCustomObject>
#>

function Initialize-OktaCallUserFactorProfile {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${PhoneExtension},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${PhoneNumber}
    )

    Process {
        'Creating PSCustomObject: Okta.PowerShell => OktaCallUserFactorProfile' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "phoneExtension" = ${PhoneExtension}
            "phoneNumber" = ${PhoneNumber}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to CallUserFactorProfile<PSCustomObject>

.DESCRIPTION

Convert from JSON to CallUserFactorProfile<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

CallUserFactorProfile<PSCustomObject>
#>
function ConvertFrom-OktaJsonToCallUserFactorProfile {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: Okta.PowerShell => OktaCallUserFactorProfile' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in OktaCallUserFactorProfile
        $AllProperties = ("phoneExtension", "phoneNumber")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "phoneExtension"))) { #optional property not found
            $PhoneExtension = $null
        } else {
            $PhoneExtension = $JsonParameters.PSobject.Properties["phoneExtension"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "phoneNumber"))) { #optional property not found
            $PhoneNumber = $null
        } else {
            $PhoneNumber = $JsonParameters.PSobject.Properties["phoneNumber"].value
        }

        $PSO = [PSCustomObject]@{
            "phoneExtension" = ${PhoneExtension}
            "phoneNumber" = ${PhoneNumber}
        }

        return $PSO
    }

}

