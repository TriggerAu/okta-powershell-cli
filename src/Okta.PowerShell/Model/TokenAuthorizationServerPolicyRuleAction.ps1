#
# Okta Management
# Allows customers to easily access the Okta Management APIs
# Version: 3.0.0
# Contact: devex-public@okta.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER AccessTokenLifetimeMinutes
No description available.
.PARAMETER InlineHook
No description available.
.PARAMETER RefreshTokenLifetimeMinutes
No description available.
.PARAMETER RefreshTokenWindowMinutes
No description available.
.OUTPUTS

TokenAuthorizationServerPolicyRuleAction<PSCustomObject>
#>

function Initialize-OktaTokenAuthorizationServerPolicyRuleAction {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${AccessTokenLifetimeMinutes},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${InlineHook},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${RefreshTokenLifetimeMinutes},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${RefreshTokenWindowMinutes}
    )

    Process {
        'Creating PSCustomObject: Okta.PowerShell => OktaTokenAuthorizationServerPolicyRuleAction' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "accessTokenLifetimeMinutes" = ${AccessTokenLifetimeMinutes}
            "inlineHook" = ${InlineHook}
            "refreshTokenLifetimeMinutes" = ${RefreshTokenLifetimeMinutes}
            "refreshTokenWindowMinutes" = ${RefreshTokenWindowMinutes}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to TokenAuthorizationServerPolicyRuleAction<PSCustomObject>

.DESCRIPTION

Convert from JSON to TokenAuthorizationServerPolicyRuleAction<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

TokenAuthorizationServerPolicyRuleAction<PSCustomObject>
#>
function ConvertFrom-OktaJsonToTokenAuthorizationServerPolicyRuleAction {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: Okta.PowerShell => OktaTokenAuthorizationServerPolicyRuleAction' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in OktaTokenAuthorizationServerPolicyRuleAction
        $AllProperties = ("accessTokenLifetimeMinutes", "inlineHook", "refreshTokenLifetimeMinutes", "refreshTokenWindowMinutes")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "accessTokenLifetimeMinutes"))) { #optional property not found
            $AccessTokenLifetimeMinutes = $null
        } else {
            $AccessTokenLifetimeMinutes = $JsonParameters.PSobject.Properties["accessTokenLifetimeMinutes"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "inlineHook"))) { #optional property not found
            $InlineHook = $null
        } else {
            $InlineHook = $JsonParameters.PSobject.Properties["inlineHook"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "refreshTokenLifetimeMinutes"))) { #optional property not found
            $RefreshTokenLifetimeMinutes = $null
        } else {
            $RefreshTokenLifetimeMinutes = $JsonParameters.PSobject.Properties["refreshTokenLifetimeMinutes"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "refreshTokenWindowMinutes"))) { #optional property not found
            $RefreshTokenWindowMinutes = $null
        } else {
            $RefreshTokenWindowMinutes = $JsonParameters.PSobject.Properties["refreshTokenWindowMinutes"].value
        }

        $PSO = [PSCustomObject]@{
            "accessTokenLifetimeMinutes" = ${AccessTokenLifetimeMinutes}
            "inlineHook" = ${InlineHook}
            "refreshTokenLifetimeMinutes" = ${RefreshTokenLifetimeMinutes}
            "refreshTokenWindowMinutes" = ${RefreshTokenWindowMinutes}
        }

        return $PSO
    }

}

