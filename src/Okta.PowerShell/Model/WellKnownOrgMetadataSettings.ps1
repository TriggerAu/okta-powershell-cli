#
# Okta Management
# Allows customers to easily access the Okta Management APIs
# Version: 3.0.0
# Contact: devex-public@okta.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER AnalyticsCollectionEnabled
No description available.
.PARAMETER BugReportingEnabled
No description available.
.PARAMETER OmEnabled
Whether the legacy Okta Mobile application is enabled for the org
.OUTPUTS

WellKnownOrgMetadataSettings<PSCustomObject>
#>

function Initialize-OktaWellKnownOrgMetadataSettings {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${AnalyticsCollectionEnabled},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${BugReportingEnabled},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${OmEnabled}
    )

    Process {
        'Creating PSCustomObject: Okta.PowerShell => OktaWellKnownOrgMetadataSettings' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "analyticsCollectionEnabled" = ${AnalyticsCollectionEnabled}
            "bugReportingEnabled" = ${BugReportingEnabled}
            "omEnabled" = ${OmEnabled}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to WellKnownOrgMetadataSettings<PSCustomObject>

.DESCRIPTION

Convert from JSON to WellKnownOrgMetadataSettings<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

WellKnownOrgMetadataSettings<PSCustomObject>
#>
function ConvertFrom-OktaJsonToWellKnownOrgMetadataSettings {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: Okta.PowerShell => OktaWellKnownOrgMetadataSettings' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in OktaWellKnownOrgMetadataSettings
        $AllProperties = ("analyticsCollectionEnabled", "bugReportingEnabled", "omEnabled")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "analyticsCollectionEnabled"))) { #optional property not found
            $AnalyticsCollectionEnabled = $null
        } else {
            $AnalyticsCollectionEnabled = $JsonParameters.PSobject.Properties["analyticsCollectionEnabled"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "bugReportingEnabled"))) { #optional property not found
            $BugReportingEnabled = $null
        } else {
            $BugReportingEnabled = $JsonParameters.PSobject.Properties["bugReportingEnabled"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "omEnabled"))) { #optional property not found
            $OmEnabled = $null
        } else {
            $OmEnabled = $JsonParameters.PSobject.Properties["omEnabled"].value
        }

        $PSO = [PSCustomObject]@{
            "analyticsCollectionEnabled" = ${AnalyticsCollectionEnabled}
            "bugReportingEnabled" = ${BugReportingEnabled}
            "omEnabled" = ${OmEnabled}
        }

        return $PSO
    }

}

