#
# Okta Management
# Allows customers to easily access the Okta Management APIs
# Version: 3.0.0
# Contact: devex-public@okta.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER AgreeToCustomPrivacyPolicy
No description available.
.PARAMETER CustomPrivacyPolicyUrl
No description available.
.PARAMETER DefaultApp
No description available.
.PARAMETER DisplayLanguage
The language specified as an [IETF BCP 47 language tag](https://datatracker.ietf.org/doc/html/rfc5646).
.PARAMETER Id
No description available.
.PARAMETER IsDefault
No description available.
.PARAMETER Name
No description available.
.PARAMETER RemovePoweredByOkta
No description available.
.PARAMETER Links
No description available.
.OUTPUTS

Brand<PSCustomObject>
#>

function Initialize-OktaBrand {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${AgreeToCustomPrivacyPolicy},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${CustomPrivacyPolicyUrl},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${DefaultApp},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${DisplayLanguage},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Id},
        [Parameter(Position = 5, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${IsDefault},
        [Parameter(Position = 6, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Name},
        [Parameter(Position = 7, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${RemovePoweredByOkta},
        [Parameter(Position = 8, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${Links}
    )

    Process {
        'Creating PSCustomObject: Okta.PowerShell => OktaBrand' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "agreeToCustomPrivacyPolicy" = ${AgreeToCustomPrivacyPolicy}
            "customPrivacyPolicyUrl" = ${CustomPrivacyPolicyUrl}
            "defaultApp" = ${DefaultApp}
            "displayLanguage" = ${DisplayLanguage}
            "id" = ${Id}
            "isDefault" = ${IsDefault}
            "name" = ${Name}
            "removePoweredByOkta" = ${RemovePoweredByOkta}
            "_links" = ${Links}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to Brand<PSCustomObject>

.DESCRIPTION

Convert from JSON to Brand<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

Brand<PSCustomObject>
#>
function ConvertFrom-OktaJsonToBrand {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: Okta.PowerShell => OktaBrand' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in OktaBrand
        $AllProperties = ("agreeToCustomPrivacyPolicy", "customPrivacyPolicyUrl", "defaultApp", "displayLanguage", "id", "isDefault", "name", "removePoweredByOkta", "_links")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "agreeToCustomPrivacyPolicy"))) { #optional property not found
            $AgreeToCustomPrivacyPolicy = $null
        } else {
            $AgreeToCustomPrivacyPolicy = $JsonParameters.PSobject.Properties["agreeToCustomPrivacyPolicy"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "customPrivacyPolicyUrl"))) { #optional property not found
            $CustomPrivacyPolicyUrl = $null
        } else {
            $CustomPrivacyPolicyUrl = $JsonParameters.PSobject.Properties["customPrivacyPolicyUrl"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "defaultApp"))) { #optional property not found
            $DefaultApp = $null
        } else {
            $DefaultApp = $JsonParameters.PSobject.Properties["defaultApp"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "displayLanguage"))) { #optional property not found
            $DisplayLanguage = $null
        } else {
            $DisplayLanguage = $JsonParameters.PSobject.Properties["displayLanguage"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "id"))) { #optional property not found
            $Id = $null
        } else {
            $Id = $JsonParameters.PSobject.Properties["id"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "isDefault"))) { #optional property not found
            $IsDefault = $null
        } else {
            $IsDefault = $JsonParameters.PSobject.Properties["isDefault"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "name"))) { #optional property not found
            $Name = $null
        } else {
            $Name = $JsonParameters.PSobject.Properties["name"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "removePoweredByOkta"))) { #optional property not found
            $RemovePoweredByOkta = $null
        } else {
            $RemovePoweredByOkta = $JsonParameters.PSobject.Properties["removePoweredByOkta"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "_links"))) { #optional property not found
            $Links = $null
        } else {
            $Links = $JsonParameters.PSobject.Properties["_links"].value
        }

        $PSO = [PSCustomObject]@{
            "agreeToCustomPrivacyPolicy" = ${AgreeToCustomPrivacyPolicy}
            "customPrivacyPolicyUrl" = ${CustomPrivacyPolicyUrl}
            "defaultApp" = ${DefaultApp}
            "displayLanguage" = ${DisplayLanguage}
            "id" = ${Id}
            "isDefault" = ${IsDefault}
            "name" = ${Name}
            "removePoweredByOkta" = ${RemovePoweredByOkta}
            "_links" = ${Links}
        }

        return $PSO
    }

}

