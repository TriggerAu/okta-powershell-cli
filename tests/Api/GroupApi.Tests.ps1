#
# Okta Management
# Allows customers to easily access the Okta Management APIs
# Version: 3.0.0
# Contact: devex-public@okta.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

Describe -tag 'PSOpenAPITools' -name 'GroupApi' {
    Context 'Invoke-ActivateGroupRule' {
        It 'Test Invoke-ActivateGroupRule' {
            #$TestResult = Invoke-ActivateGroupRule -RuleId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Add-GroupOwner' {
        It 'Test Add-GroupOwner' {
            #$TestResult = Add-GroupOwner -GroupId "TEST_VALUE" -GroupOwner "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Add-UserToGroup' {
        It 'Test Add-UserToGroup' {
            #$TestResult = Add-UserToGroup -GroupId "TEST_VALUE" -UserId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-Group' {
        It 'Test New-Group' {
            #$TestResult = New-Group -Group "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-GroupRule' {
        It 'Test New-GroupRule' {
            #$TestResult = New-GroupRule -GroupRule "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-DeactivateGroupRule' {
        It 'Test Invoke-DeactivateGroupRule' {
            #$TestResult = Invoke-DeactivateGroupRule -RuleId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-DeleteGroup' {
        It 'Test Invoke-DeleteGroup' {
            #$TestResult = Invoke-DeleteGroup -GroupId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-DeleteGroupOwner' {
        It 'Test Invoke-DeleteGroupOwner' {
            #$TestResult = Invoke-DeleteGroupOwner -GroupId "TEST_VALUE" -OwnerId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-DeleteGroupRule' {
        It 'Test Invoke-DeleteGroupRule' {
            #$TestResult = Invoke-DeleteGroupRule -RuleId "TEST_VALUE" -RemoveUsers "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-Group' {
        It 'Test Get-Group' {
            #$TestResult = Get-Group -GroupId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-GroupOwners' {
        It 'Test Get-GroupOwners' {
            #$TestResult = Get-GroupOwners -GroupId "TEST_VALUE" -Filter "TEST_VALUE" -After "TEST_VALUE" -Limit "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-GroupRule' {
        It 'Test Get-GroupRule' {
            #$TestResult = Get-GroupRule -RuleId "TEST_VALUE" -Expand "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-ListAssignedApplicationsForGroup' {
        It 'Test Invoke-ListAssignedApplicationsForGroup' {
            #$TestResult = Invoke-ListAssignedApplicationsForGroup -GroupId "TEST_VALUE" -After "TEST_VALUE" -Limit "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-ListGroupRules' {
        It 'Test Invoke-ListGroupRules' {
            #$TestResult = Invoke-ListGroupRules -Limit "TEST_VALUE" -After "TEST_VALUE" -Search "TEST_VALUE" -Expand "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-ListGroupUsers' {
        It 'Test Invoke-ListGroupUsers' {
            #$TestResult = Invoke-ListGroupUsers -GroupId "TEST_VALUE" -After "TEST_VALUE" -Limit "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-ListGroups' {
        It 'Test Invoke-ListGroups' {
            #$TestResult = Invoke-ListGroups -Q "TEST_VALUE" -Filter "TEST_VALUE" -After "TEST_VALUE" -Limit "TEST_VALUE" -Expand "TEST_VALUE" -Search "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Remove-UserFromGroup' {
        It 'Test Remove-UserFromGroup' {
            #$TestResult = Remove-UserFromGroup -GroupId "TEST_VALUE" -UserId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Update-Group' {
        It 'Test Update-Group' {
            #$TestResult = Update-Group -GroupId "TEST_VALUE" -Group "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Update-GroupRule' {
        It 'Test Update-GroupRule' {
            #$TestResult = Update-GroupRule -RuleId "TEST_VALUE" -GroupRule "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

}
