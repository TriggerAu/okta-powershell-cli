#
# Okta Management
# Allows customers to easily access the Okta Management APIs
# Version: 3.0.0
# Contact: devex-public@okta.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

Describe -tag 'PSOpenAPITools' -name 'AgentPoolsApi' {
    Context 'Invoke-ActivateAgentPoolsUpdate' {
        It 'Test Invoke-ActivateAgentPoolsUpdate' {
            #$TestResult = Invoke-ActivateAgentPoolsUpdate -PoolId "TEST_VALUE" -UpdateId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-AgentPoolsUpdate' {
        It 'Test New-AgentPoolsUpdate' {
            #$TestResult = New-AgentPoolsUpdate -PoolId "TEST_VALUE" -AgentPoolUpdate "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-DeactivateAgentPoolsUpdate' {
        It 'Test Invoke-DeactivateAgentPoolsUpdate' {
            #$TestResult = Invoke-DeactivateAgentPoolsUpdate -PoolId "TEST_VALUE" -UpdateId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-DeleteAgentPoolsUpdate' {
        It 'Test Invoke-DeleteAgentPoolsUpdate' {
            #$TestResult = Invoke-DeleteAgentPoolsUpdate -PoolId "TEST_VALUE" -UpdateId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-AgentPools' {
        It 'Test Get-AgentPools' {
            #$TestResult = Get-AgentPools -LimitPerPoolType "TEST_VALUE" -PoolType "TEST_VALUE" -After "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-AgentPoolsUpdateInstance' {
        It 'Test Get-AgentPoolsUpdateInstance' {
            #$TestResult = Get-AgentPoolsUpdateInstance -PoolId "TEST_VALUE" -UpdateId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-AgentPoolsUpdateSettings' {
        It 'Test Get-AgentPoolsUpdateSettings' {
            #$TestResult = Get-AgentPoolsUpdateSettings -PoolId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-AgentPoolsUpdates' {
        It 'Test Get-AgentPoolsUpdates' {
            #$TestResult = Get-AgentPoolsUpdates -PoolId "TEST_VALUE" -Scheduled "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Suspend-AgentPoolsUpdate' {
        It 'Test Suspend-AgentPoolsUpdate' {
            #$TestResult = Suspend-AgentPoolsUpdate -PoolId "TEST_VALUE" -UpdateId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Resume-AgentPoolsUpdate' {
        It 'Test Resume-AgentPoolsUpdate' {
            #$TestResult = Resume-AgentPoolsUpdate -PoolId "TEST_VALUE" -UpdateId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-RetryAgentPoolsUpdate' {
        It 'Test Invoke-RetryAgentPoolsUpdate' {
            #$TestResult = Invoke-RetryAgentPoolsUpdate -PoolId "TEST_VALUE" -UpdateId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Set-AgentPoolsUpdateSettings' {
        It 'Test Set-AgentPoolsUpdateSettings' {
            #$TestResult = Set-AgentPoolsUpdateSettings -PoolId "TEST_VALUE" -AgentPoolUpdateSetting "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Stop-AgentPoolsUpdate' {
        It 'Test Stop-AgentPoolsUpdate' {
            #$TestResult = Stop-AgentPoolsUpdate -PoolId "TEST_VALUE" -UpdateId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Update-AgentPoolsUpdate' {
        It 'Test Update-AgentPoolsUpdate' {
            #$TestResult = Update-AgentPoolsUpdate -PoolId "TEST_VALUE" -UpdateId "TEST_VALUE" -AgentPoolUpdate "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

}
