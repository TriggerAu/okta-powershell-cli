#
# Okta Management
# Allows customers to easily access the Okta Management APIs
# Version: 3.0.0
# Contact: devex-public@okta.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

Describe -tag 'Okta.PowerShell' -name 'OktaOktaNetworkZoneApi' {
    Context 'Invoke-OktaActivateNetworkZone' {
        It 'Test Invoke-OktaActivateNetworkZone' {
            #$TestResult = Invoke-OktaActivateNetworkZone -ZoneId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-OktaNetworkZone' {
        It 'Test New-OktaNetworkZone' {
            #$TestResult = New-OktaNetworkZone -Zone "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-OktaDeactivateNetworkZone' {
        It 'Test Invoke-OktaDeactivateNetworkZone' {
            #$TestResult = Invoke-OktaDeactivateNetworkZone -ZoneId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-OktaDeleteNetworkZone' {
        It 'Test Invoke-OktaDeleteNetworkZone' {
            #$TestResult = Invoke-OktaDeleteNetworkZone -ZoneId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-OktaNetworkZone' {
        It 'Test Get-OktaNetworkZone' {
            #$TestResult = Get-OktaNetworkZone -ZoneId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-OktaListNetworkZones' {
        It 'Test Invoke-OktaListNetworkZones' {
            #$TestResult = Invoke-OktaListNetworkZones -After "TEST_VALUE" -Limit "TEST_VALUE" -Filter "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Update-OktaNetworkZone' {
        It 'Test Update-OktaNetworkZone' {
            #$TestResult = Update-OktaNetworkZone -ZoneId "TEST_VALUE" -Zone "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

}
