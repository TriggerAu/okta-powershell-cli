#
# Okta Management
# Allows customers to easily access the Okta Management APIs
# Version: 3.0.0
# Contact: devex-public@okta.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

Describe -tag 'Okta.PowerShell' -name 'OktaOktaUserApi' {
    Context 'Invoke-OktaActivateUser' {
        It 'Test Invoke-OktaActivateUser' {
            #$TestResult = Invoke-OktaActivateUser -UserId "TEST_VALUE" -SendEmail "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Rename-OktaPassword' {
        It 'Test Rename-OktaPassword' {
            #$TestResult = Rename-OktaPassword -UserId "TEST_VALUE" -ChangePasswordRequest "TEST_VALUE" -Strict "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Rename-OktaRecoveryQuestion' {
        It 'Test Rename-OktaRecoveryQuestion' {
            #$TestResult = Rename-OktaRecoveryQuestion -UserId "TEST_VALUE" -UserCredentials "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Clear-OktaUserSessions' {
        It 'Test Clear-OktaUserSessions' {
            #$TestResult = Clear-OktaUserSessions -UserId "TEST_VALUE" -OauthTokens "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-OktaUser' {
        It 'Test New-OktaUser' {
            #$TestResult = New-OktaUser -Body "TEST_VALUE" -Activate "TEST_VALUE" -Provider "TEST_VALUE" -NextLogin "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-OktaDeactivateOrDeleteUser' {
        It 'Test Invoke-OktaDeactivateOrDeleteUser' {
            #$TestResult = Invoke-OktaDeactivateOrDeleteUser -UserId "TEST_VALUE" -SendEmail "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-OktaDeactivateUser' {
        It 'Test Invoke-OktaDeactivateUser' {
            #$TestResult = Invoke-OktaDeactivateUser -UserId "TEST_VALUE" -SendEmail "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-OktaExpirePassword' {
        It 'Test Invoke-OktaExpirePassword' {
            #$TestResult = Invoke-OktaExpirePassword -UserId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-OktaExpirePasswordAndGetTemporaryPassword' {
        It 'Test Invoke-OktaExpirePasswordAndGetTemporaryPassword' {
            #$TestResult = Invoke-OktaExpirePasswordAndGetTemporaryPassword -UserId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-OktaForgotPassword' {
        It 'Test Invoke-OktaForgotPassword' {
            #$TestResult = Invoke-OktaForgotPassword -UserId "TEST_VALUE" -SendEmail "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-OktaForgotPasswordSetNewPassword' {
        It 'Test Invoke-OktaForgotPasswordSetNewPassword' {
            #$TestResult = Invoke-OktaForgotPasswordSetNewPassword -UserId "TEST_VALUE" -UserCredentials "TEST_VALUE" -SendEmail "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-OktaLinkedObjectsForUser' {
        It 'Test Get-OktaLinkedObjectsForUser' {
            #$TestResult = Get-OktaLinkedObjectsForUser -UserId "TEST_VALUE" -RelationshipName "TEST_VALUE" -After "TEST_VALUE" -Limit "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-OktaRefreshTokenForUserAndClient' {
        It 'Test Get-OktaRefreshTokenForUserAndClient' {
            #$TestResult = Get-OktaRefreshTokenForUserAndClient -UserId "TEST_VALUE" -ClientId "TEST_VALUE" -TokenId "TEST_VALUE" -Expand "TEST_VALUE" -Limit "TEST_VALUE" -After "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-OktaUser' {
        It 'Test Get-OktaUser' {
            #$TestResult = Get-OktaUser -UserId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-OktaUserGrant' {
        It 'Test Get-OktaUserGrant' {
            #$TestResult = Get-OktaUserGrant -UserId "TEST_VALUE" -GrantId "TEST_VALUE" -Expand "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-OktaListAppLinks' {
        It 'Test Invoke-OktaListAppLinks' {
            #$TestResult = Invoke-OktaListAppLinks -UserId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-OktaListGrantsForUserAndClient' {
        It 'Test Invoke-OktaListGrantsForUserAndClient' {
            #$TestResult = Invoke-OktaListGrantsForUserAndClient -UserId "TEST_VALUE" -ClientId "TEST_VALUE" -Expand "TEST_VALUE" -After "TEST_VALUE" -Limit "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-OktaListRefreshTokensForUserAndClient' {
        It 'Test Invoke-OktaListRefreshTokensForUserAndClient' {
            #$TestResult = Invoke-OktaListRefreshTokensForUserAndClient -UserId "TEST_VALUE" -ClientId "TEST_VALUE" -Expand "TEST_VALUE" -After "TEST_VALUE" -Limit "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-OktaListUserClients' {
        It 'Test Invoke-OktaListUserClients' {
            #$TestResult = Invoke-OktaListUserClients -UserId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-OktaListUserGrants' {
        It 'Test Invoke-OktaListUserGrants' {
            #$TestResult = Invoke-OktaListUserGrants -UserId "TEST_VALUE" -ScopeId "TEST_VALUE" -Expand "TEST_VALUE" -After "TEST_VALUE" -Limit "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-OktaListUserGroups' {
        It 'Test Invoke-OktaListUserGroups' {
            #$TestResult = Invoke-OktaListUserGroups -UserId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-OktaListUserIdentityProviders' {
        It 'Test Invoke-OktaListUserIdentityProviders' {
            #$TestResult = Invoke-OktaListUserIdentityProviders -UserId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-OktaListUsers' {
        It 'Test Invoke-OktaListUsers' {
            #$TestResult = Invoke-OktaListUsers -Q "TEST_VALUE" -After "TEST_VALUE" -Limit "TEST_VALUE" -Filter "TEST_VALUE" -Search "TEST_VALUE" -SortBy "TEST_VALUE" -SortOrder "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-OktaPartialUpdateUser' {
        It 'Test Invoke-OktaPartialUpdateUser' {
            #$TestResult = Invoke-OktaPartialUpdateUser -UserId "TEST_VALUE" -User "TEST_VALUE" -Strict "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-OktaReactivateUser' {
        It 'Test Invoke-OktaReactivateUser' {
            #$TestResult = Invoke-OktaReactivateUser -UserId "TEST_VALUE" -SendEmail "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Remove-OktaLinkedObjectForUser' {
        It 'Test Remove-OktaLinkedObjectForUser' {
            #$TestResult = Remove-OktaLinkedObjectForUser -UserId "TEST_VALUE" -RelationshipName "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Reset-OktaFactors' {
        It 'Test Reset-OktaFactors' {
            #$TestResult = Reset-OktaFactors -UserId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Reset-OktaPassword' {
        It 'Test Reset-OktaPassword' {
            #$TestResult = Reset-OktaPassword -UserId "TEST_VALUE" -SendEmail "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Revoke-OktaGrantsForUserAndClient' {
        It 'Test Revoke-OktaGrantsForUserAndClient' {
            #$TestResult = Revoke-OktaGrantsForUserAndClient -UserId "TEST_VALUE" -ClientId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Revoke-OktaTokenForUserAndClient' {
        It 'Test Revoke-OktaTokenForUserAndClient' {
            #$TestResult = Revoke-OktaTokenForUserAndClient -UserId "TEST_VALUE" -ClientId "TEST_VALUE" -TokenId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Revoke-OktaTokensForUserAndClient' {
        It 'Test Revoke-OktaTokensForUserAndClient' {
            #$TestResult = Revoke-OktaTokensForUserAndClient -UserId "TEST_VALUE" -ClientId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Revoke-OktaUserGrant' {
        It 'Test Revoke-OktaUserGrant' {
            #$TestResult = Revoke-OktaUserGrant -UserId "TEST_VALUE" -GrantId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Revoke-OktaUserGrants' {
        It 'Test Revoke-OktaUserGrants' {
            #$TestResult = Revoke-OktaUserGrants -UserId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Set-OktaLinkedObjectForUser' {
        It 'Test Set-OktaLinkedObjectForUser' {
            #$TestResult = Set-OktaLinkedObjectForUser -AssociatedUserId "TEST_VALUE" -PrimaryRelationshipName "TEST_VALUE" -PrimaryUserId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Suspend-OktaUser' {
        It 'Test Suspend-OktaUser' {
            #$TestResult = Suspend-OktaUser -UserId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Unlock-OktaUser' {
        It 'Test Unlock-OktaUser' {
            #$TestResult = Unlock-OktaUser -UserId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-OktaUnsuspendUser' {
        It 'Test Invoke-OktaUnsuspendUser' {
            #$TestResult = Invoke-OktaUnsuspendUser -UserId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Update-OktaUser' {
        It 'Test Update-OktaUser' {
            #$TestResult = Update-OktaUser -UserId "TEST_VALUE" -User "TEST_VALUE" -Strict "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

}
