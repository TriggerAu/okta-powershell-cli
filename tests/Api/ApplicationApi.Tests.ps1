#
# Okta Management
# Allows customers to easily access the Okta Management APIs
# Version: 3.0.0
# Contact: devex-public@okta.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

Describe -tag 'PSOpenAPITools' -name 'ApplicationApi' {
    Context 'Invoke-ActivateApplication' {
        It 'Test Invoke-ActivateApplication' {
            #$TestResult = Invoke-ActivateApplication -AppId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-ActivateDefaultProvisioningConnectionForApplication' {
        It 'Test Invoke-ActivateDefaultProvisioningConnectionForApplication' {
            #$TestResult = Invoke-ActivateDefaultProvisioningConnectionForApplication -AppId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Set-ApplicationPolicy' {
        It 'Test Set-ApplicationPolicy' {
            #$TestResult = Set-ApplicationPolicy -AppId "TEST_VALUE" -PolicyId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Set-UserToApplication' {
        It 'Test Set-UserToApplication' {
            #$TestResult = Set-UserToApplication -AppId "TEST_VALUE" -AppUser "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Copy-ApplicationKey' {
        It 'Test Copy-ApplicationKey' {
            #$TestResult = Copy-ApplicationKey -AppId "TEST_VALUE" -KeyId "TEST_VALUE" -TargetAid "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-Application' {
        It 'Test New-Application' {
            #$TestResult = New-Application -Application "TEST_VALUE" -Activate "TEST_VALUE" -OktaAccessGatewayAgent "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-ApplicationGroupAssignment' {
        It 'Test New-ApplicationGroupAssignment' {
            #$TestResult = New-ApplicationGroupAssignment -AppId "TEST_VALUE" -GroupId "TEST_VALUE" -ApplicationGroupAssignment "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-DeactivateApplication' {
        It 'Test Invoke-DeactivateApplication' {
            #$TestResult = Invoke-DeactivateApplication -AppId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-DeactivateDefaultProvisioningConnectionForApplication' {
        It 'Test Invoke-DeactivateDefaultProvisioningConnectionForApplication' {
            #$TestResult = Invoke-DeactivateDefaultProvisioningConnectionForApplication -AppId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-DeleteApplication' {
        It 'Test Invoke-DeleteApplication' {
            #$TestResult = Invoke-DeleteApplication -AppId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-DeleteApplicationGroupAssignment' {
        It 'Test Invoke-DeleteApplicationGroupAssignment' {
            #$TestResult = Invoke-DeleteApplicationGroupAssignment -AppId "TEST_VALUE" -GroupId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-DeleteApplicationUser' {
        It 'Test Invoke-DeleteApplicationUser' {
            #$TestResult = Invoke-DeleteApplicationUser -AppId "TEST_VALUE" -UserId "TEST_VALUE" -SendEmail "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-ApplicationKey' {
        It 'Test New-ApplicationKey' {
            #$TestResult = New-ApplicationKey -AppId "TEST_VALUE" -ValidityYears "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-CsrForApplication' {
        It 'Test New-CsrForApplication' {
            #$TestResult = New-CsrForApplication -AppId "TEST_VALUE" -Metadata "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-Application' {
        It 'Test Get-Application' {
            #$TestResult = Get-Application -AppId "TEST_VALUE" -Expand "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-ApplicationGroupAssignment' {
        It 'Test Get-ApplicationGroupAssignment' {
            #$TestResult = Get-ApplicationGroupAssignment -AppId "TEST_VALUE" -GroupId "TEST_VALUE" -Expand "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-ApplicationKey' {
        It 'Test Get-ApplicationKey' {
            #$TestResult = Get-ApplicationKey -AppId "TEST_VALUE" -KeyId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-ApplicationUser' {
        It 'Test Get-ApplicationUser' {
            #$TestResult = Get-ApplicationUser -AppId "TEST_VALUE" -UserId "TEST_VALUE" -Expand "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-CsrForApplication' {
        It 'Test Get-CsrForApplication' {
            #$TestResult = Get-CsrForApplication -AppId "TEST_VALUE" -CsrId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-DefaultProvisioningConnectionForApplication' {
        It 'Test Get-DefaultProvisioningConnectionForApplication' {
            #$TestResult = Get-DefaultProvisioningConnectionForApplication -AppId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-FeatureForApplication' {
        It 'Test Get-FeatureForApplication' {
            #$TestResult = Get-FeatureForApplication -AppId "TEST_VALUE" -Name "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-OAuth2TokenForApplication' {
        It 'Test Get-OAuth2TokenForApplication' {
            #$TestResult = Get-OAuth2TokenForApplication -AppId "TEST_VALUE" -TokenId "TEST_VALUE" -Expand "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-ScopeConsentGrant' {
        It 'Test Get-ScopeConsentGrant' {
            #$TestResult = Get-ScopeConsentGrant -AppId "TEST_VALUE" -GrantId "TEST_VALUE" -Expand "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Grant-ConsentToScope' {
        It 'Test Grant-ConsentToScope' {
            #$TestResult = Grant-ConsentToScope -AppId "TEST_VALUE" -OAuth2ScopeConsentGrant "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-ListApplicationGroupAssignments' {
        It 'Test Invoke-ListApplicationGroupAssignments' {
            #$TestResult = Invoke-ListApplicationGroupAssignments -AppId "TEST_VALUE" -Q "TEST_VALUE" -After "TEST_VALUE" -Limit "TEST_VALUE" -Expand "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-ListApplicationKeys' {
        It 'Test Invoke-ListApplicationKeys' {
            #$TestResult = Invoke-ListApplicationKeys -AppId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-ListApplicationUsers' {
        It 'Test Invoke-ListApplicationUsers' {
            #$TestResult = Invoke-ListApplicationUsers -AppId "TEST_VALUE" -Q "TEST_VALUE" -QueryScope "TEST_VALUE" -After "TEST_VALUE" -Limit "TEST_VALUE" -Filter "TEST_VALUE" -Expand "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-ListApplications' {
        It 'Test Invoke-ListApplications' {
            #$TestResult = Invoke-ListApplications -Q "TEST_VALUE" -After "TEST_VALUE" -Limit "TEST_VALUE" -Filter "TEST_VALUE" -Expand "TEST_VALUE" -IncludeNonDeleted "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-ListCsrsForApplication' {
        It 'Test Invoke-ListCsrsForApplication' {
            #$TestResult = Invoke-ListCsrsForApplication -AppId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-ListFeaturesForApplication' {
        It 'Test Invoke-ListFeaturesForApplication' {
            #$TestResult = Invoke-ListFeaturesForApplication -AppId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-ListOAuth2TokensForApplication' {
        It 'Test Invoke-ListOAuth2TokensForApplication' {
            #$TestResult = Invoke-ListOAuth2TokensForApplication -AppId "TEST_VALUE" -Expand "TEST_VALUE" -After "TEST_VALUE" -Limit "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-ListScopeConsentGrants' {
        It 'Test Invoke-ListScopeConsentGrants' {
            #$TestResult = Invoke-ListScopeConsentGrants -AppId "TEST_VALUE" -Expand "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Publish-CsrFromApplication' {
        It 'Test Publish-CsrFromApplication' {
            #$TestResult = Publish-CsrFromApplication -AppId "TEST_VALUE" -CsrId "TEST_VALUE" -Body "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Revoke-CsrFromApplication' {
        It 'Test Revoke-CsrFromApplication' {
            #$TestResult = Revoke-CsrFromApplication -AppId "TEST_VALUE" -CsrId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Revoke-OAuth2TokenForApplication' {
        It 'Test Revoke-OAuth2TokenForApplication' {
            #$TestResult = Revoke-OAuth2TokenForApplication -AppId "TEST_VALUE" -TokenId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Revoke-OAuth2TokensForApplication' {
        It 'Test Revoke-OAuth2TokensForApplication' {
            #$TestResult = Revoke-OAuth2TokensForApplication -AppId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Revoke-ScopeConsentGrant' {
        It 'Test Revoke-ScopeConsentGrant' {
            #$TestResult = Revoke-ScopeConsentGrant -AppId "TEST_VALUE" -GrantId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Set-DefaultProvisioningConnectionForApplication' {
        It 'Test Set-DefaultProvisioningConnectionForApplication' {
            #$TestResult = Set-DefaultProvisioningConnectionForApplication -AppId "TEST_VALUE" -ProvisioningConnectionRequest "TEST_VALUE" -Activate "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Update-Application' {
        It 'Test Update-Application' {
            #$TestResult = Update-Application -AppId "TEST_VALUE" -Application "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Update-ApplicationUser' {
        It 'Test Update-ApplicationUser' {
            #$TestResult = Update-ApplicationUser -AppId "TEST_VALUE" -UserId "TEST_VALUE" -AppUser "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Update-FeatureForApplication' {
        It 'Test Update-FeatureForApplication' {
            #$TestResult = Update-FeatureForApplication -AppId "TEST_VALUE" -Name "TEST_VALUE" -CapabilitiesObject "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-UploadApplicationLogo' {
        It 'Test Invoke-UploadApplicationLogo' {
            #$TestResult = Invoke-UploadApplicationLogo -AppId "TEST_VALUE" -File "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

}
