#
# Okta Management
# Allows customers to easily access the Okta Management APIs
# Version: 3.0.0
# Contact: devex-public@okta.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

Describe -tag 'PSOpenAPITools' -name 'LogStreamApi' {
    Context 'Invoke-ActivateLogStream' {
        It 'Test Invoke-ActivateLogStream' {
            #$TestResult = Invoke-ActivateLogStream -LogStreamId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-LogStream' {
        It 'Test New-LogStream' {
            #$TestResult = New-LogStream -Instance "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-DeactivateLogStream' {
        It 'Test Invoke-DeactivateLogStream' {
            #$TestResult = Invoke-DeactivateLogStream -LogStreamId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-DeleteLogStream' {
        It 'Test Invoke-DeleteLogStream' {
            #$TestResult = Invoke-DeleteLogStream -LogStreamId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-LogStream' {
        It 'Test Get-LogStream' {
            #$TestResult = Get-LogStream -LogStreamId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-ListLogStreams' {
        It 'Test Invoke-ListLogStreams' {
            #$TestResult = Invoke-ListLogStreams -After "TEST_VALUE" -Limit "TEST_VALUE" -Filter "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-ReplaceLogStream' {
        It 'Test Invoke-ReplaceLogStream' {
            #$TestResult = Invoke-ReplaceLogStream -LogStreamId "TEST_VALUE" -Instance "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

}
