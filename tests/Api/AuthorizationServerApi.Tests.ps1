#
# Okta Management
# Allows customers to easily access the Okta Management APIs
# Version: 3.0.0
# Contact: devex-public@okta.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

Describe -tag 'PSOpenAPITools' -name 'AuthorizationServerApi' {
    Context 'Invoke-ActivateAuthorizationServer' {
        It 'Test Invoke-ActivateAuthorizationServer' {
            #$TestResult = Invoke-ActivateAuthorizationServer -AuthServerId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-ActivateAuthorizationServerPolicy' {
        It 'Test Invoke-ActivateAuthorizationServerPolicy' {
            #$TestResult = Invoke-ActivateAuthorizationServerPolicy -AuthServerId "TEST_VALUE" -PolicyId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-ActivateAuthorizationServerPolicyRule' {
        It 'Test Invoke-ActivateAuthorizationServerPolicyRule' {
            #$TestResult = Invoke-ActivateAuthorizationServerPolicyRule -AuthServerId "TEST_VALUE" -PolicyId "TEST_VALUE" -RuleId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-AuthorizationServer' {
        It 'Test New-AuthorizationServer' {
            #$TestResult = New-AuthorizationServer -AuthorizationServer "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-AuthorizationServerPolicy' {
        It 'Test New-AuthorizationServerPolicy' {
            #$TestResult = New-AuthorizationServerPolicy -AuthServerId "TEST_VALUE" -Policy "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-AuthorizationServerPolicyRule' {
        It 'Test New-AuthorizationServerPolicyRule' {
            #$TestResult = New-AuthorizationServerPolicyRule -PolicyId "TEST_VALUE" -AuthServerId "TEST_VALUE" -PolicyRule "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-OAuth2Claim' {
        It 'Test New-OAuth2Claim' {
            #$TestResult = New-OAuth2Claim -AuthServerId "TEST_VALUE" -OAuth2Claim "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-OAuth2Scope' {
        It 'Test New-OAuth2Scope' {
            #$TestResult = New-OAuth2Scope -AuthServerId "TEST_VALUE" -OAuth2Scope "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-DeactivateAuthorizationServer' {
        It 'Test Invoke-DeactivateAuthorizationServer' {
            #$TestResult = Invoke-DeactivateAuthorizationServer -AuthServerId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-DeactivateAuthorizationServerPolicy' {
        It 'Test Invoke-DeactivateAuthorizationServerPolicy' {
            #$TestResult = Invoke-DeactivateAuthorizationServerPolicy -AuthServerId "TEST_VALUE" -PolicyId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-DeactivateAuthorizationServerPolicyRule' {
        It 'Test Invoke-DeactivateAuthorizationServerPolicyRule' {
            #$TestResult = Invoke-DeactivateAuthorizationServerPolicyRule -AuthServerId "TEST_VALUE" -PolicyId "TEST_VALUE" -RuleId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-DeleteAuthorizationServer' {
        It 'Test Invoke-DeleteAuthorizationServer' {
            #$TestResult = Invoke-DeleteAuthorizationServer -AuthServerId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-DeleteAuthorizationServerPolicy' {
        It 'Test Invoke-DeleteAuthorizationServerPolicy' {
            #$TestResult = Invoke-DeleteAuthorizationServerPolicy -AuthServerId "TEST_VALUE" -PolicyId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-DeleteAuthorizationServerPolicyRule' {
        It 'Test Invoke-DeleteAuthorizationServerPolicyRule' {
            #$TestResult = Invoke-DeleteAuthorizationServerPolicyRule -PolicyId "TEST_VALUE" -AuthServerId "TEST_VALUE" -RuleId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-DeleteOAuth2Claim' {
        It 'Test Invoke-DeleteOAuth2Claim' {
            #$TestResult = Invoke-DeleteOAuth2Claim -AuthServerId "TEST_VALUE" -ClaimId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-DeleteOAuth2Scope' {
        It 'Test Invoke-DeleteOAuth2Scope' {
            #$TestResult = Invoke-DeleteOAuth2Scope -AuthServerId "TEST_VALUE" -ScopeId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-AuthorizationServer' {
        It 'Test Get-AuthorizationServer' {
            #$TestResult = Get-AuthorizationServer -AuthServerId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-AuthorizationServerPolicy' {
        It 'Test Get-AuthorizationServerPolicy' {
            #$TestResult = Get-AuthorizationServerPolicy -AuthServerId "TEST_VALUE" -PolicyId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-AuthorizationServerPolicyRule' {
        It 'Test Get-AuthorizationServerPolicyRule' {
            #$TestResult = Get-AuthorizationServerPolicyRule -PolicyId "TEST_VALUE" -AuthServerId "TEST_VALUE" -RuleId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-OAuth2Claim' {
        It 'Test Get-OAuth2Claim' {
            #$TestResult = Get-OAuth2Claim -AuthServerId "TEST_VALUE" -ClaimId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-OAuth2Scope' {
        It 'Test Get-OAuth2Scope' {
            #$TestResult = Get-OAuth2Scope -AuthServerId "TEST_VALUE" -ScopeId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-RefreshTokenForAuthorizationServerAndClient' {
        It 'Test Get-RefreshTokenForAuthorizationServerAndClient' {
            #$TestResult = Get-RefreshTokenForAuthorizationServerAndClient -AuthServerId "TEST_VALUE" -ClientId "TEST_VALUE" -TokenId "TEST_VALUE" -Expand "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-ListAuthorizationServerKeys' {
        It 'Test Invoke-ListAuthorizationServerKeys' {
            #$TestResult = Invoke-ListAuthorizationServerKeys -AuthServerId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-ListAuthorizationServerPolicies' {
        It 'Test Invoke-ListAuthorizationServerPolicies' {
            #$TestResult = Invoke-ListAuthorizationServerPolicies -AuthServerId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-ListAuthorizationServerPolicyRules' {
        It 'Test Invoke-ListAuthorizationServerPolicyRules' {
            #$TestResult = Invoke-ListAuthorizationServerPolicyRules -PolicyId "TEST_VALUE" -AuthServerId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-ListAuthorizationServers' {
        It 'Test Invoke-ListAuthorizationServers' {
            #$TestResult = Invoke-ListAuthorizationServers -Q "TEST_VALUE" -Limit "TEST_VALUE" -After "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-ListOAuth2Claims' {
        It 'Test Invoke-ListOAuth2Claims' {
            #$TestResult = Invoke-ListOAuth2Claims -AuthServerId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-ListOAuth2ClientsForAuthorizationServer' {
        It 'Test Invoke-ListOAuth2ClientsForAuthorizationServer' {
            #$TestResult = Invoke-ListOAuth2ClientsForAuthorizationServer -AuthServerId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-ListOAuth2Scopes' {
        It 'Test Invoke-ListOAuth2Scopes' {
            #$TestResult = Invoke-ListOAuth2Scopes -AuthServerId "TEST_VALUE" -Q "TEST_VALUE" -Filter "TEST_VALUE" -Cursor "TEST_VALUE" -Limit "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-ListRefreshTokensForAuthorizationServerAndClient' {
        It 'Test Invoke-ListRefreshTokensForAuthorizationServerAndClient' {
            #$TestResult = Invoke-ListRefreshTokensForAuthorizationServerAndClient -AuthServerId "TEST_VALUE" -ClientId "TEST_VALUE" -Expand "TEST_VALUE" -After "TEST_VALUE" -Limit "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Revoke-RefreshTokenForAuthorizationServerAndClient' {
        It 'Test Revoke-RefreshTokenForAuthorizationServerAndClient' {
            #$TestResult = Revoke-RefreshTokenForAuthorizationServerAndClient -AuthServerId "TEST_VALUE" -ClientId "TEST_VALUE" -TokenId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Revoke-RefreshTokensForAuthorizationServerAndClient' {
        It 'Test Revoke-RefreshTokensForAuthorizationServerAndClient' {
            #$TestResult = Revoke-RefreshTokensForAuthorizationServerAndClient -AuthServerId "TEST_VALUE" -ClientId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-RotateAuthorizationServerKeys' {
        It 'Test Invoke-RotateAuthorizationServerKeys' {
            #$TestResult = Invoke-RotateAuthorizationServerKeys -AuthServerId "TEST_VALUE" -Use "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Update-AuthorizationServer' {
        It 'Test Update-AuthorizationServer' {
            #$TestResult = Update-AuthorizationServer -AuthServerId "TEST_VALUE" -AuthorizationServer "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Update-AuthorizationServerPolicy' {
        It 'Test Update-AuthorizationServerPolicy' {
            #$TestResult = Update-AuthorizationServerPolicy -AuthServerId "TEST_VALUE" -PolicyId "TEST_VALUE" -Policy "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Update-AuthorizationServerPolicyRule' {
        It 'Test Update-AuthorizationServerPolicyRule' {
            #$TestResult = Update-AuthorizationServerPolicyRule -PolicyId "TEST_VALUE" -AuthServerId "TEST_VALUE" -RuleId "TEST_VALUE" -PolicyRule "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Update-OAuth2Claim' {
        It 'Test Update-OAuth2Claim' {
            #$TestResult = Update-OAuth2Claim -AuthServerId "TEST_VALUE" -ClaimId "TEST_VALUE" -OAuth2Claim "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Update-OAuth2Scope' {
        It 'Test Update-OAuth2Scope' {
            #$TestResult = Update-OAuth2Scope -AuthServerId "TEST_VALUE" -ScopeId "TEST_VALUE" -OAuth2Scope "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

}
