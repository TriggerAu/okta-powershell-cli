#
# Okta Management
# Allows customers to easily access the Okta Management APIs
# Version: 3.0.0
# Contact: devex-public@okta.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

Describe -tag 'PSOpenAPITools' -name 'RoleApi' {
    Context 'Add-RolePermission' {
        It 'Test Add-RolePermission' {
            #$TestResult = Add-RolePermission -RoleIdOrLabel "TEST_VALUE" -PermissionType "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-Role' {
        It 'Test New-Role' {
            #$TestResult = New-Role -Instance "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-DeleteRole' {
        It 'Test Invoke-DeleteRole' {
            #$TestResult = Invoke-DeleteRole -RoleIdOrLabel "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-DeleteRolePermission' {
        It 'Test Invoke-DeleteRolePermission' {
            #$TestResult = Invoke-DeleteRolePermission -RoleIdOrLabel "TEST_VALUE" -PermissionType "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-Role' {
        It 'Test Get-Role' {
            #$TestResult = Get-Role -RoleIdOrLabel "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-RolePermission' {
        It 'Test Get-RolePermission' {
            #$TestResult = Get-RolePermission -RoleIdOrLabel "TEST_VALUE" -PermissionType "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-ListRolePermissions' {
        It 'Test Invoke-ListRolePermissions' {
            #$TestResult = Invoke-ListRolePermissions -RoleIdOrLabel "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-ListRoles' {
        It 'Test Invoke-ListRoles' {
            #$TestResult = Invoke-ListRoles -After "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-ReplaceRole' {
        It 'Test Invoke-ReplaceRole' {
            #$TestResult = Invoke-ReplaceRole -RoleIdOrLabel "TEST_VALUE" -Instance "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

}
