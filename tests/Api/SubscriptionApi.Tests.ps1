#
# Okta Management
# Allows customers to easily access the Okta Management APIs
# Version: 3.0.0
# Contact: devex-public@okta.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

Describe -tag 'PSOpenAPITools' -name 'SubscriptionApi' {
    Context 'Get-RoleSubscriptionByNotificationType' {
        It 'Test Get-RoleSubscriptionByNotificationType' {
            #$TestResult = Get-RoleSubscriptionByNotificationType -RoleTypeOrRoleId "TEST_VALUE" -NotificationType "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-UserSubscriptionByNotificationType' {
        It 'Test Get-UserSubscriptionByNotificationType' {
            #$TestResult = Get-UserSubscriptionByNotificationType -UserId "TEST_VALUE" -NotificationType "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-ListRoleSubscriptions' {
        It 'Test Invoke-ListRoleSubscriptions' {
            #$TestResult = Invoke-ListRoleSubscriptions -RoleTypeOrRoleId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-ListUserSubscriptions' {
        It 'Test Invoke-ListUserSubscriptions' {
            #$TestResult = Invoke-ListUserSubscriptions -UserId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-SubscribeRoleSubscriptionByNotificationType' {
        It 'Test Invoke-SubscribeRoleSubscriptionByNotificationType' {
            #$TestResult = Invoke-SubscribeRoleSubscriptionByNotificationType -RoleTypeOrRoleId "TEST_VALUE" -NotificationType "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-SubscribeUserSubscriptionByNotificationType' {
        It 'Test Invoke-SubscribeUserSubscriptionByNotificationType' {
            #$TestResult = Invoke-SubscribeUserSubscriptionByNotificationType -UserId "TEST_VALUE" -NotificationType "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-UnsubscribeRoleSubscriptionByNotificationType' {
        It 'Test Invoke-UnsubscribeRoleSubscriptionByNotificationType' {
            #$TestResult = Invoke-UnsubscribeRoleSubscriptionByNotificationType -RoleTypeOrRoleId "TEST_VALUE" -NotificationType "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-UnsubscribeUserSubscriptionByNotificationType' {
        It 'Test Invoke-UnsubscribeUserSubscriptionByNotificationType' {
            #$TestResult = Invoke-UnsubscribeUserSubscriptionByNotificationType -UserId "TEST_VALUE" -NotificationType "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

}
