#
# Okta Management
# Allows customers to easily access the Okta Management APIs
# Version: 3.0.0
# Contact: devex-public@okta.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

Describe -tag 'PSOpenAPITools' -name 'InlineHookApi' {
    Context 'Invoke-ActivateInlineHook' {
        It 'Test Invoke-ActivateInlineHook' {
            #$TestResult = Invoke-ActivateInlineHook -InlineHookId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-InlineHook' {
        It 'Test New-InlineHook' {
            #$TestResult = New-InlineHook -InlineHook "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-DeactivateInlineHook' {
        It 'Test Invoke-DeactivateInlineHook' {
            #$TestResult = Invoke-DeactivateInlineHook -InlineHookId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-DeleteInlineHook' {
        It 'Test Invoke-DeleteInlineHook' {
            #$TestResult = Invoke-DeleteInlineHook -InlineHookId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-ExecuteInlineHook' {
        It 'Test Invoke-ExecuteInlineHook' {
            #$TestResult = Invoke-ExecuteInlineHook -InlineHookId "TEST_VALUE" -PayloadData "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-InlineHook' {
        It 'Test Get-InlineHook' {
            #$TestResult = Get-InlineHook -InlineHookId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-ListInlineHooks' {
        It 'Test Invoke-ListInlineHooks' {
            #$TestResult = Invoke-ListInlineHooks -Type "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Update-InlineHook' {
        It 'Test Update-InlineHook' {
            #$TestResult = Update-InlineHook -InlineHookId "TEST_VALUE" -InlineHook "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

}
