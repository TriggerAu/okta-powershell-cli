#
# Okta Management
# Allows customers to easily access the Okta Management APIs
# Version: 3.0.0
# Contact: devex-public@okta.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

Describe -tag 'PSOpenAPITools' -name 'OrgSettingApi' {
    Context 'Invoke-BulkRemoveEmailAddressBounces' {
        It 'Test Invoke-BulkRemoveEmailAddressBounces' {
            #$TestResult = Invoke-BulkRemoveEmailAddressBounces -BouncesRemoveListObj "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-ExtendOktaSupport' {
        It 'Test Invoke-ExtendOktaSupport' {
            #$TestResult = Invoke-ExtendOktaSupport
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-OktaCommunicationSettings' {
        It 'Test Get-OktaCommunicationSettings' {
            #$TestResult = Get-OktaCommunicationSettings
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-OrgContactTypes' {
        It 'Test Get-OrgContactTypes' {
            #$TestResult = Get-OrgContactTypes
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-OrgContactUser' {
        It 'Test Get-OrgContactUser' {
            #$TestResult = Get-OrgContactUser -ContactType "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-OrgOktaSupportSettings' {
        It 'Test Get-OrgOktaSupportSettings' {
            #$TestResult = Get-OrgOktaSupportSettings
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-OrgPreferences' {
        It 'Test Get-OrgPreferences' {
            #$TestResult = Get-OrgPreferences
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-OrgSettings' {
        It 'Test Get-OrgSettings' {
            #$TestResult = Get-OrgSettings
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Grant-OktaSupport' {
        It 'Test Grant-OktaSupport' {
            #$TestResult = Grant-OktaSupport
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Hide-OktaUIFooter' {
        It 'Test Hide-OktaUIFooter' {
            #$TestResult = Hide-OktaUIFooter
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-OptInUsersToOktaCommunicationEmails' {
        It 'Test Invoke-OptInUsersToOktaCommunicationEmails' {
            #$TestResult = Invoke-OptInUsersToOktaCommunicationEmails
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-OptOutUsersFromOktaCommunicationEmails' {
        It 'Test Invoke-OptOutUsersFromOktaCommunicationEmails' {
            #$TestResult = Invoke-OptOutUsersFromOktaCommunicationEmails
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-PartialUpdateOrgSetting' {
        It 'Test Invoke-PartialUpdateOrgSetting' {
            #$TestResult = Invoke-PartialUpdateOrgSetting -OrgSetting "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Revoke-OktaSupport' {
        It 'Test Revoke-OktaSupport' {
            #$TestResult = Revoke-OktaSupport
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Show-OktaUIFooter' {
        It 'Test Show-OktaUIFooter' {
            #$TestResult = Show-OktaUIFooter
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Update-OrgContactUser' {
        It 'Test Update-OrgContactUser' {
            #$TestResult = Update-OrgContactUser -ContactType "TEST_VALUE" -OrgContactUser "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Update-OrgLogo' {
        It 'Test Update-OrgLogo' {
            #$TestResult = Update-OrgLogo -File "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Update-OrgSetting' {
        It 'Test Update-OrgSetting' {
            #$TestResult = Update-OrgSetting -OrgSetting "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-WellknownOrgMetadata' {
        It 'Test Invoke-WellknownOrgMetadata' {
            #$TestResult = Invoke-WellknownOrgMetadata
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

}
