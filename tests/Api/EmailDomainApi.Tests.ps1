#
# Okta Management
# Allows customers to easily access the Okta Management APIs
# Version: 3.0.0
# Contact: devex-public@okta.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

Describe -tag 'PSOpenAPITools' -name 'EmailDomainApi' {
    Context 'New-EmailDomain' {
        It 'Test New-EmailDomain' {
            #$TestResult = New-EmailDomain -EmailDomain "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-DeleteEmailDomain' {
        It 'Test Invoke-DeleteEmailDomain' {
            #$TestResult = Invoke-DeleteEmailDomain -EmailDomainId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-EmailDomain' {
        It 'Test Get-EmailDomain' {
            #$TestResult = Get-EmailDomain -EmailDomainId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-ListEmailDomainBrands' {
        It 'Test Invoke-ListEmailDomainBrands' {
            #$TestResult = Invoke-ListEmailDomainBrands -EmailDomainId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-ListEmailDomains' {
        It 'Test Invoke-ListEmailDomains' {
            #$TestResult = Invoke-ListEmailDomains
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Update-EmailDomain' {
        It 'Test Update-EmailDomain' {
            #$TestResult = Update-EmailDomain -EmailDomainId "TEST_VALUE" -UpdateEmailDomain "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Test-EmailDomain' {
        It 'Test Test-EmailDomain' {
            #$TestResult = Test-EmailDomain -EmailDomainId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

}
