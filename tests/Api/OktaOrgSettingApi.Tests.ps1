#
# Okta Management
# Allows customers to easily access the Okta Management APIs
# Version: 3.0.0
# Contact: devex-public@okta.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

Describe -tag 'Okta.PowerShell' -name 'OktaOktaOrgSettingApi' {
    Context 'Invoke-OktaBulkRemoveEmailAddressBounces' {
        It 'Test Invoke-OktaBulkRemoveEmailAddressBounces' {
            #$TestResult = Invoke-OktaBulkRemoveEmailAddressBounces -BouncesRemoveListObj "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-OktaExtendOktaSupport' {
        It 'Test Invoke-OktaExtendOktaSupport' {
            #$TestResult = Invoke-OktaExtendOktaSupport
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-OktaOktaCommunicationSettings' {
        It 'Test Get-OktaOktaCommunicationSettings' {
            #$TestResult = Get-OktaOktaCommunicationSettings
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-OktaOrgContactTypes' {
        It 'Test Get-OktaOrgContactTypes' {
            #$TestResult = Get-OktaOrgContactTypes
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-OktaOrgContactUser' {
        It 'Test Get-OktaOrgContactUser' {
            #$TestResult = Get-OktaOrgContactUser -ContactType "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-OktaOrgOktaSupportSettings' {
        It 'Test Get-OktaOrgOktaSupportSettings' {
            #$TestResult = Get-OktaOrgOktaSupportSettings
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-OktaOrgPreferences' {
        It 'Test Get-OktaOrgPreferences' {
            #$TestResult = Get-OktaOrgPreferences
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-OktaOrgSettings' {
        It 'Test Get-OktaOrgSettings' {
            #$TestResult = Get-OktaOrgSettings
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Grant-OktaOktaSupport' {
        It 'Test Grant-OktaOktaSupport' {
            #$TestResult = Grant-OktaOktaSupport
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Hide-OktaOktaUIFooter' {
        It 'Test Hide-OktaOktaUIFooter' {
            #$TestResult = Hide-OktaOktaUIFooter
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-OktaOptInUsersToOktaCommunicationEmails' {
        It 'Test Invoke-OktaOptInUsersToOktaCommunicationEmails' {
            #$TestResult = Invoke-OktaOptInUsersToOktaCommunicationEmails
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-OktaOptOutUsersFromOktaCommunicationEmails' {
        It 'Test Invoke-OktaOptOutUsersFromOktaCommunicationEmails' {
            #$TestResult = Invoke-OktaOptOutUsersFromOktaCommunicationEmails
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-OktaPartialUpdateOrgSetting' {
        It 'Test Invoke-OktaPartialUpdateOrgSetting' {
            #$TestResult = Invoke-OktaPartialUpdateOrgSetting -OrgSetting "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Revoke-OktaOktaSupport' {
        It 'Test Revoke-OktaOktaSupport' {
            #$TestResult = Revoke-OktaOktaSupport
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Show-OktaOktaUIFooter' {
        It 'Test Show-OktaOktaUIFooter' {
            #$TestResult = Show-OktaOktaUIFooter
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Update-OktaOrgContactUser' {
        It 'Test Update-OktaOrgContactUser' {
            #$TestResult = Update-OktaOrgContactUser -ContactType "TEST_VALUE" -OrgContactUser "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Update-OktaOrgLogo' {
        It 'Test Update-OktaOrgLogo' {
            #$TestResult = Update-OktaOrgLogo -File "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Update-OktaOrgSetting' {
        It 'Test Update-OktaOrgSetting' {
            #$TestResult = Update-OktaOrgSetting -OrgSetting "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-OktaWellknownOrgMetadata' {
        It 'Test Invoke-OktaWellknownOrgMetadata' {
            #$TestResult = Invoke-OktaWellknownOrgMetadata
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

}
