#
# Okta Management
# Allows customers to easily access the Okta Management APIs
# Version: 3.0.0
# Contact: devex-public@okta.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

Describe -tag 'Okta.PowerShell' -name 'OktaOktaAuthorizationServerApi' {
    Context 'Invoke-OktaActivateAuthorizationServer' {
        It 'Test Invoke-OktaActivateAuthorizationServer' {
            #$TestResult = Invoke-OktaActivateAuthorizationServer -AuthServerId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-OktaActivateAuthorizationServerPolicy' {
        It 'Test Invoke-OktaActivateAuthorizationServerPolicy' {
            #$TestResult = Invoke-OktaActivateAuthorizationServerPolicy -AuthServerId "TEST_VALUE" -PolicyId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-OktaActivateAuthorizationServerPolicyRule' {
        It 'Test Invoke-OktaActivateAuthorizationServerPolicyRule' {
            #$TestResult = Invoke-OktaActivateAuthorizationServerPolicyRule -AuthServerId "TEST_VALUE" -PolicyId "TEST_VALUE" -RuleId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-OktaAuthorizationServer' {
        It 'Test New-OktaAuthorizationServer' {
            #$TestResult = New-OktaAuthorizationServer -AuthorizationServer "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-OktaAuthorizationServerPolicy' {
        It 'Test New-OktaAuthorizationServerPolicy' {
            #$TestResult = New-OktaAuthorizationServerPolicy -AuthServerId "TEST_VALUE" -Policy "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-OktaAuthorizationServerPolicyRule' {
        It 'Test New-OktaAuthorizationServerPolicyRule' {
            #$TestResult = New-OktaAuthorizationServerPolicyRule -PolicyId "TEST_VALUE" -AuthServerId "TEST_VALUE" -PolicyRule "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-OktaOAuth2Claim' {
        It 'Test New-OktaOAuth2Claim' {
            #$TestResult = New-OktaOAuth2Claim -AuthServerId "TEST_VALUE" -OAuth2Claim "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-OktaOAuth2Scope' {
        It 'Test New-OktaOAuth2Scope' {
            #$TestResult = New-OktaOAuth2Scope -AuthServerId "TEST_VALUE" -OAuth2Scope "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-OktaDeactivateAuthorizationServer' {
        It 'Test Invoke-OktaDeactivateAuthorizationServer' {
            #$TestResult = Invoke-OktaDeactivateAuthorizationServer -AuthServerId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-OktaDeactivateAuthorizationServerPolicy' {
        It 'Test Invoke-OktaDeactivateAuthorizationServerPolicy' {
            #$TestResult = Invoke-OktaDeactivateAuthorizationServerPolicy -AuthServerId "TEST_VALUE" -PolicyId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-OktaDeactivateAuthorizationServerPolicyRule' {
        It 'Test Invoke-OktaDeactivateAuthorizationServerPolicyRule' {
            #$TestResult = Invoke-OktaDeactivateAuthorizationServerPolicyRule -AuthServerId "TEST_VALUE" -PolicyId "TEST_VALUE" -RuleId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-OktaDeleteAuthorizationServer' {
        It 'Test Invoke-OktaDeleteAuthorizationServer' {
            #$TestResult = Invoke-OktaDeleteAuthorizationServer -AuthServerId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-OktaDeleteAuthorizationServerPolicy' {
        It 'Test Invoke-OktaDeleteAuthorizationServerPolicy' {
            #$TestResult = Invoke-OktaDeleteAuthorizationServerPolicy -AuthServerId "TEST_VALUE" -PolicyId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-OktaDeleteAuthorizationServerPolicyRule' {
        It 'Test Invoke-OktaDeleteAuthorizationServerPolicyRule' {
            #$TestResult = Invoke-OktaDeleteAuthorizationServerPolicyRule -PolicyId "TEST_VALUE" -AuthServerId "TEST_VALUE" -RuleId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-OktaDeleteOAuth2Claim' {
        It 'Test Invoke-OktaDeleteOAuth2Claim' {
            #$TestResult = Invoke-OktaDeleteOAuth2Claim -AuthServerId "TEST_VALUE" -ClaimId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-OktaDeleteOAuth2Scope' {
        It 'Test Invoke-OktaDeleteOAuth2Scope' {
            #$TestResult = Invoke-OktaDeleteOAuth2Scope -AuthServerId "TEST_VALUE" -ScopeId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-OktaAuthorizationServer' {
        It 'Test Get-OktaAuthorizationServer' {
            #$TestResult = Get-OktaAuthorizationServer -AuthServerId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-OktaAuthorizationServerPolicy' {
        It 'Test Get-OktaAuthorizationServerPolicy' {
            #$TestResult = Get-OktaAuthorizationServerPolicy -AuthServerId "TEST_VALUE" -PolicyId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-OktaAuthorizationServerPolicyRule' {
        It 'Test Get-OktaAuthorizationServerPolicyRule' {
            #$TestResult = Get-OktaAuthorizationServerPolicyRule -PolicyId "TEST_VALUE" -AuthServerId "TEST_VALUE" -RuleId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-OktaOAuth2Claim' {
        It 'Test Get-OktaOAuth2Claim' {
            #$TestResult = Get-OktaOAuth2Claim -AuthServerId "TEST_VALUE" -ClaimId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-OktaOAuth2Scope' {
        It 'Test Get-OktaOAuth2Scope' {
            #$TestResult = Get-OktaOAuth2Scope -AuthServerId "TEST_VALUE" -ScopeId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-OktaRefreshTokenForAuthorizationServerAndClient' {
        It 'Test Get-OktaRefreshTokenForAuthorizationServerAndClient' {
            #$TestResult = Get-OktaRefreshTokenForAuthorizationServerAndClient -AuthServerId "TEST_VALUE" -ClientId "TEST_VALUE" -TokenId "TEST_VALUE" -Expand "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-OktaListAuthorizationServerKeys' {
        It 'Test Invoke-OktaListAuthorizationServerKeys' {
            #$TestResult = Invoke-OktaListAuthorizationServerKeys -AuthServerId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-OktaListAuthorizationServerPolicies' {
        It 'Test Invoke-OktaListAuthorizationServerPolicies' {
            #$TestResult = Invoke-OktaListAuthorizationServerPolicies -AuthServerId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-OktaListAuthorizationServerPolicyRules' {
        It 'Test Invoke-OktaListAuthorizationServerPolicyRules' {
            #$TestResult = Invoke-OktaListAuthorizationServerPolicyRules -PolicyId "TEST_VALUE" -AuthServerId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-OktaListAuthorizationServers' {
        It 'Test Invoke-OktaListAuthorizationServers' {
            #$TestResult = Invoke-OktaListAuthorizationServers -Q "TEST_VALUE" -Limit "TEST_VALUE" -After "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-OktaListOAuth2Claims' {
        It 'Test Invoke-OktaListOAuth2Claims' {
            #$TestResult = Invoke-OktaListOAuth2Claims -AuthServerId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-OktaListOAuth2ClientsForAuthorizationServer' {
        It 'Test Invoke-OktaListOAuth2ClientsForAuthorizationServer' {
            #$TestResult = Invoke-OktaListOAuth2ClientsForAuthorizationServer -AuthServerId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-OktaListOAuth2Scopes' {
        It 'Test Invoke-OktaListOAuth2Scopes' {
            #$TestResult = Invoke-OktaListOAuth2Scopes -AuthServerId "TEST_VALUE" -Q "TEST_VALUE" -Filter "TEST_VALUE" -Cursor "TEST_VALUE" -Limit "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-OktaListRefreshTokensForAuthorizationServerAndClient' {
        It 'Test Invoke-OktaListRefreshTokensForAuthorizationServerAndClient' {
            #$TestResult = Invoke-OktaListRefreshTokensForAuthorizationServerAndClient -AuthServerId "TEST_VALUE" -ClientId "TEST_VALUE" -Expand "TEST_VALUE" -After "TEST_VALUE" -Limit "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Revoke-OktaRefreshTokenForAuthorizationServerAndClient' {
        It 'Test Revoke-OktaRefreshTokenForAuthorizationServerAndClient' {
            #$TestResult = Revoke-OktaRefreshTokenForAuthorizationServerAndClient -AuthServerId "TEST_VALUE" -ClientId "TEST_VALUE" -TokenId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Revoke-OktaRefreshTokensForAuthorizationServerAndClient' {
        It 'Test Revoke-OktaRefreshTokensForAuthorizationServerAndClient' {
            #$TestResult = Revoke-OktaRefreshTokensForAuthorizationServerAndClient -AuthServerId "TEST_VALUE" -ClientId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-OktaRotateAuthorizationServerKeys' {
        It 'Test Invoke-OktaRotateAuthorizationServerKeys' {
            #$TestResult = Invoke-OktaRotateAuthorizationServerKeys -AuthServerId "TEST_VALUE" -Use "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Update-OktaAuthorizationServer' {
        It 'Test Update-OktaAuthorizationServer' {
            #$TestResult = Update-OktaAuthorizationServer -AuthServerId "TEST_VALUE" -AuthorizationServer "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Update-OktaAuthorizationServerPolicy' {
        It 'Test Update-OktaAuthorizationServerPolicy' {
            #$TestResult = Update-OktaAuthorizationServerPolicy -AuthServerId "TEST_VALUE" -PolicyId "TEST_VALUE" -Policy "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Update-OktaAuthorizationServerPolicyRule' {
        It 'Test Update-OktaAuthorizationServerPolicyRule' {
            #$TestResult = Update-OktaAuthorizationServerPolicyRule -PolicyId "TEST_VALUE" -AuthServerId "TEST_VALUE" -RuleId "TEST_VALUE" -PolicyRule "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Update-OktaOAuth2Claim' {
        It 'Test Update-OktaOAuth2Claim' {
            #$TestResult = Update-OktaOAuth2Claim -AuthServerId "TEST_VALUE" -ClaimId "TEST_VALUE" -OAuth2Claim "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Update-OktaOAuth2Scope' {
        It 'Test Update-OktaOAuth2Scope' {
            #$TestResult = Update-OktaOAuth2Scope -AuthServerId "TEST_VALUE" -ScopeId "TEST_VALUE" -OAuth2Scope "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

}
