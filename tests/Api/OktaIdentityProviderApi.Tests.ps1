#
# Okta Management
# Allows customers to easily access the Okta Management APIs
# Version: 3.0.0
# Contact: devex-public@okta.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

Describe -tag 'Okta.PowerShell' -name 'OktaOktaIdentityProviderApi' {
    Context 'Invoke-OktaActivateIdentityProvider' {
        It 'Test Invoke-OktaActivateIdentityProvider' {
            #$TestResult = Invoke-OktaActivateIdentityProvider -IdpId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Copy-OktaIdentityProviderKey' {
        It 'Test Copy-OktaIdentityProviderKey' {
            #$TestResult = Copy-OktaIdentityProviderKey -IdpId "TEST_VALUE" -KeyId "TEST_VALUE" -TargetIdpId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-OktaIdentityProvider' {
        It 'Test New-OktaIdentityProvider' {
            #$TestResult = New-OktaIdentityProvider -IdentityProvider "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-OktaIdentityProviderKey' {
        It 'Test New-OktaIdentityProviderKey' {
            #$TestResult = New-OktaIdentityProviderKey -JsonWebKey "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-OktaDeactivateIdentityProvider' {
        It 'Test Invoke-OktaDeactivateIdentityProvider' {
            #$TestResult = Invoke-OktaDeactivateIdentityProvider -IdpId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-OktaDeleteIdentityProvider' {
        It 'Test Invoke-OktaDeleteIdentityProvider' {
            #$TestResult = Invoke-OktaDeleteIdentityProvider -IdpId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-OktaDeleteIdentityProviderKey' {
        It 'Test Invoke-OktaDeleteIdentityProviderKey' {
            #$TestResult = Invoke-OktaDeleteIdentityProviderKey -KeyId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-OktaCsrForIdentityProvider' {
        It 'Test New-OktaCsrForIdentityProvider' {
            #$TestResult = New-OktaCsrForIdentityProvider -IdpId "TEST_VALUE" -Metadata "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-OktaIdentityProviderSigningKey' {
        It 'Test New-OktaIdentityProviderSigningKey' {
            #$TestResult = New-OktaIdentityProviderSigningKey -IdpId "TEST_VALUE" -ValidityYears "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-OktaCsrForIdentityProvider' {
        It 'Test Get-OktaCsrForIdentityProvider' {
            #$TestResult = Get-OktaCsrForIdentityProvider -IdpId "TEST_VALUE" -CsrId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-OktaIdentityProvider' {
        It 'Test Get-OktaIdentityProvider' {
            #$TestResult = Get-OktaIdentityProvider -IdpId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-OktaIdentityProviderApplicationUser' {
        It 'Test Get-OktaIdentityProviderApplicationUser' {
            #$TestResult = Get-OktaIdentityProviderApplicationUser -IdpId "TEST_VALUE" -UserId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-OktaIdentityProviderKey' {
        It 'Test Get-OktaIdentityProviderKey' {
            #$TestResult = Get-OktaIdentityProviderKey -KeyId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-OktaIdentityProviderSigningKey' {
        It 'Test Get-OktaIdentityProviderSigningKey' {
            #$TestResult = Get-OktaIdentityProviderSigningKey -IdpId "TEST_VALUE" -KeyId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-OktaLinkUserToIdentityProvider' {
        It 'Test Invoke-OktaLinkUserToIdentityProvider' {
            #$TestResult = Invoke-OktaLinkUserToIdentityProvider -IdpId "TEST_VALUE" -UserId "TEST_VALUE" -UserIdentityProviderLinkRequest "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-OktaListCsrsForIdentityProvider' {
        It 'Test Invoke-OktaListCsrsForIdentityProvider' {
            #$TestResult = Invoke-OktaListCsrsForIdentityProvider -IdpId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-OktaListIdentityProviderApplicationUsers' {
        It 'Test Invoke-OktaListIdentityProviderApplicationUsers' {
            #$TestResult = Invoke-OktaListIdentityProviderApplicationUsers -IdpId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-OktaListIdentityProviderKeys' {
        It 'Test Invoke-OktaListIdentityProviderKeys' {
            #$TestResult = Invoke-OktaListIdentityProviderKeys -After "TEST_VALUE" -Limit "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-OktaListIdentityProviderSigningKeys' {
        It 'Test Invoke-OktaListIdentityProviderSigningKeys' {
            #$TestResult = Invoke-OktaListIdentityProviderSigningKeys -IdpId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-OktaListIdentityProviders' {
        It 'Test Invoke-OktaListIdentityProviders' {
            #$TestResult = Invoke-OktaListIdentityProviders -Q "TEST_VALUE" -After "TEST_VALUE" -Limit "TEST_VALUE" -Type "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-OktaListSocialAuthTokens' {
        It 'Test Invoke-OktaListSocialAuthTokens' {
            #$TestResult = Invoke-OktaListSocialAuthTokens -IdpId "TEST_VALUE" -UserId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Publish-OktaCsrForIdentityProvider' {
        It 'Test Publish-OktaCsrForIdentityProvider' {
            #$TestResult = Publish-OktaCsrForIdentityProvider -IdpId "TEST_VALUE" -CsrId "TEST_VALUE" -Body "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Revoke-OktaCsrForIdentityProvider' {
        It 'Test Revoke-OktaCsrForIdentityProvider' {
            #$TestResult = Revoke-OktaCsrForIdentityProvider -IdpId "TEST_VALUE" -CsrId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-OktaUnlinkUserFromIdentityProvider' {
        It 'Test Invoke-OktaUnlinkUserFromIdentityProvider' {
            #$TestResult = Invoke-OktaUnlinkUserFromIdentityProvider -IdpId "TEST_VALUE" -UserId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Update-OktaIdentityProvider' {
        It 'Test Update-OktaIdentityProvider' {
            #$TestResult = Update-OktaIdentityProvider -IdpId "TEST_VALUE" -IdentityProvider "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

}
