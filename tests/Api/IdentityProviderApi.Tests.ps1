#
# Okta Management
# Allows customers to easily access the Okta Management APIs
# Version: 3.0.0
# Contact: devex-public@okta.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

Describe -tag 'PSOpenAPITools' -name 'IdentityProviderApi' {
    Context 'Invoke-ActivateIdentityProvider' {
        It 'Test Invoke-ActivateIdentityProvider' {
            #$TestResult = Invoke-ActivateIdentityProvider -IdpId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Copy-IdentityProviderKey' {
        It 'Test Copy-IdentityProviderKey' {
            #$TestResult = Copy-IdentityProviderKey -IdpId "TEST_VALUE" -KeyId "TEST_VALUE" -TargetIdpId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-IdentityProvider' {
        It 'Test New-IdentityProvider' {
            #$TestResult = New-IdentityProvider -IdentityProvider "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-IdentityProviderKey' {
        It 'Test New-IdentityProviderKey' {
            #$TestResult = New-IdentityProviderKey -JsonWebKey "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-DeactivateIdentityProvider' {
        It 'Test Invoke-DeactivateIdentityProvider' {
            #$TestResult = Invoke-DeactivateIdentityProvider -IdpId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-DeleteIdentityProvider' {
        It 'Test Invoke-DeleteIdentityProvider' {
            #$TestResult = Invoke-DeleteIdentityProvider -IdpId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-DeleteIdentityProviderKey' {
        It 'Test Invoke-DeleteIdentityProviderKey' {
            #$TestResult = Invoke-DeleteIdentityProviderKey -KeyId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-CsrForIdentityProvider' {
        It 'Test New-CsrForIdentityProvider' {
            #$TestResult = New-CsrForIdentityProvider -IdpId "TEST_VALUE" -Metadata "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-IdentityProviderSigningKey' {
        It 'Test New-IdentityProviderSigningKey' {
            #$TestResult = New-IdentityProviderSigningKey -IdpId "TEST_VALUE" -ValidityYears "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-CsrForIdentityProvider' {
        It 'Test Get-CsrForIdentityProvider' {
            #$TestResult = Get-CsrForIdentityProvider -IdpId "TEST_VALUE" -CsrId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-IdentityProvider' {
        It 'Test Get-IdentityProvider' {
            #$TestResult = Get-IdentityProvider -IdpId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-IdentityProviderApplicationUser' {
        It 'Test Get-IdentityProviderApplicationUser' {
            #$TestResult = Get-IdentityProviderApplicationUser -IdpId "TEST_VALUE" -UserId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-IdentityProviderKey' {
        It 'Test Get-IdentityProviderKey' {
            #$TestResult = Get-IdentityProviderKey -KeyId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-IdentityProviderSigningKey' {
        It 'Test Get-IdentityProviderSigningKey' {
            #$TestResult = Get-IdentityProviderSigningKey -IdpId "TEST_VALUE" -KeyId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-LinkUserToIdentityProvider' {
        It 'Test Invoke-LinkUserToIdentityProvider' {
            #$TestResult = Invoke-LinkUserToIdentityProvider -IdpId "TEST_VALUE" -UserId "TEST_VALUE" -UserIdentityProviderLinkRequest "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-ListCsrsForIdentityProvider' {
        It 'Test Invoke-ListCsrsForIdentityProvider' {
            #$TestResult = Invoke-ListCsrsForIdentityProvider -IdpId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-ListIdentityProviderApplicationUsers' {
        It 'Test Invoke-ListIdentityProviderApplicationUsers' {
            #$TestResult = Invoke-ListIdentityProviderApplicationUsers -IdpId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-ListIdentityProviderKeys' {
        It 'Test Invoke-ListIdentityProviderKeys' {
            #$TestResult = Invoke-ListIdentityProviderKeys -After "TEST_VALUE" -Limit "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-ListIdentityProviderSigningKeys' {
        It 'Test Invoke-ListIdentityProviderSigningKeys' {
            #$TestResult = Invoke-ListIdentityProviderSigningKeys -IdpId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-ListIdentityProviders' {
        It 'Test Invoke-ListIdentityProviders' {
            #$TestResult = Invoke-ListIdentityProviders -Q "TEST_VALUE" -After "TEST_VALUE" -Limit "TEST_VALUE" -Type "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-ListSocialAuthTokens' {
        It 'Test Invoke-ListSocialAuthTokens' {
            #$TestResult = Invoke-ListSocialAuthTokens -IdpId "TEST_VALUE" -UserId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Publish-CsrForIdentityProvider' {
        It 'Test Publish-CsrForIdentityProvider' {
            #$TestResult = Publish-CsrForIdentityProvider -IdpId "TEST_VALUE" -CsrId "TEST_VALUE" -Body "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Revoke-CsrForIdentityProvider' {
        It 'Test Revoke-CsrForIdentityProvider' {
            #$TestResult = Revoke-CsrForIdentityProvider -IdpId "TEST_VALUE" -CsrId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-UnlinkUserFromIdentityProvider' {
        It 'Test Invoke-UnlinkUserFromIdentityProvider' {
            #$TestResult = Invoke-UnlinkUserFromIdentityProvider -IdpId "TEST_VALUE" -UserId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Update-IdentityProvider' {
        It 'Test Update-IdentityProvider' {
            #$TestResult = Update-IdentityProvider -IdpId "TEST_VALUE" -IdentityProvider "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

}
