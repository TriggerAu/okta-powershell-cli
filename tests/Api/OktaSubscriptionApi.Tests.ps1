#
# Okta Management
# Allows customers to easily access the Okta Management APIs
# Version: 3.0.0
# Contact: devex-public@okta.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

Describe -tag 'Okta.PowerShell' -name 'OktaOktaSubscriptionApi' {
    Context 'Get-OktaRoleSubscriptionByNotificationType' {
        It 'Test Get-OktaRoleSubscriptionByNotificationType' {
            #$TestResult = Get-OktaRoleSubscriptionByNotificationType -RoleTypeOrRoleId "TEST_VALUE" -NotificationType "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-OktaUserSubscriptionByNotificationType' {
        It 'Test Get-OktaUserSubscriptionByNotificationType' {
            #$TestResult = Get-OktaUserSubscriptionByNotificationType -UserId "TEST_VALUE" -NotificationType "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-OktaListRoleSubscriptions' {
        It 'Test Invoke-OktaListRoleSubscriptions' {
            #$TestResult = Invoke-OktaListRoleSubscriptions -RoleTypeOrRoleId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-OktaListUserSubscriptions' {
        It 'Test Invoke-OktaListUserSubscriptions' {
            #$TestResult = Invoke-OktaListUserSubscriptions -UserId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-OktaSubscribeRoleSubscriptionByNotificationType' {
        It 'Test Invoke-OktaSubscribeRoleSubscriptionByNotificationType' {
            #$TestResult = Invoke-OktaSubscribeRoleSubscriptionByNotificationType -RoleTypeOrRoleId "TEST_VALUE" -NotificationType "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-OktaSubscribeUserSubscriptionByNotificationType' {
        It 'Test Invoke-OktaSubscribeUserSubscriptionByNotificationType' {
            #$TestResult = Invoke-OktaSubscribeUserSubscriptionByNotificationType -UserId "TEST_VALUE" -NotificationType "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-OktaUnsubscribeRoleSubscriptionByNotificationType' {
        It 'Test Invoke-OktaUnsubscribeRoleSubscriptionByNotificationType' {
            #$TestResult = Invoke-OktaUnsubscribeRoleSubscriptionByNotificationType -RoleTypeOrRoleId "TEST_VALUE" -NotificationType "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-OktaUnsubscribeUserSubscriptionByNotificationType' {
        It 'Test Invoke-OktaUnsubscribeUserSubscriptionByNotificationType' {
            #$TestResult = Invoke-OktaUnsubscribeUserSubscriptionByNotificationType -UserId "TEST_VALUE" -NotificationType "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

}
