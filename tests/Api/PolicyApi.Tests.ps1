#
# Okta Management
# Allows customers to easily access the Okta Management APIs
# Version: 3.0.0
# Contact: devex-public@okta.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

Describe -tag 'PSOpenAPITools' -name 'PolicyApi' {
    Context 'Invoke-ActivatePolicy' {
        It 'Test Invoke-ActivatePolicy' {
            #$TestResult = Invoke-ActivatePolicy -PolicyId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-ActivatePolicyRule' {
        It 'Test Invoke-ActivatePolicyRule' {
            #$TestResult = Invoke-ActivatePolicyRule -PolicyId "TEST_VALUE" -RuleId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Copy-Policy' {
        It 'Test Copy-Policy' {
            #$TestResult = Copy-Policy -PolicyId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-Policy' {
        It 'Test New-Policy' {
            #$TestResult = New-Policy -Policy "TEST_VALUE" -Activate "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PolicyRule' {
        It 'Test New-PolicyRule' {
            #$TestResult = New-PolicyRule -PolicyId "TEST_VALUE" -PolicyRule "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-DeactivatePolicy' {
        It 'Test Invoke-DeactivatePolicy' {
            #$TestResult = Invoke-DeactivatePolicy -PolicyId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-DeactivatePolicyRule' {
        It 'Test Invoke-DeactivatePolicyRule' {
            #$TestResult = Invoke-DeactivatePolicyRule -PolicyId "TEST_VALUE" -RuleId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-DeletePolicy' {
        It 'Test Invoke-DeletePolicy' {
            #$TestResult = Invoke-DeletePolicy -PolicyId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-DeletePolicyRule' {
        It 'Test Invoke-DeletePolicyRule' {
            #$TestResult = Invoke-DeletePolicyRule -PolicyId "TEST_VALUE" -RuleId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-Policy' {
        It 'Test Get-Policy' {
            #$TestResult = Get-Policy -PolicyId "TEST_VALUE" -Expand "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PolicyRule' {
        It 'Test Get-PolicyRule' {
            #$TestResult = Get-PolicyRule -PolicyId "TEST_VALUE" -RuleId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-ListPolicies' {
        It 'Test Invoke-ListPolicies' {
            #$TestResult = Invoke-ListPolicies -Type "TEST_VALUE" -Status "TEST_VALUE" -Expand "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-ListPolicyRules' {
        It 'Test Invoke-ListPolicyRules' {
            #$TestResult = Invoke-ListPolicyRules -PolicyId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Update-Policy' {
        It 'Test Update-Policy' {
            #$TestResult = Update-Policy -PolicyId "TEST_VALUE" -Policy "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Update-PolicyRule' {
        It 'Test Update-PolicyRule' {
            #$TestResult = Update-PolicyRule -PolicyId "TEST_VALUE" -RuleId "TEST_VALUE" -PolicyRule "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

}
