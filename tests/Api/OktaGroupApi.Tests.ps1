#
# Okta Management
# Allows customers to easily access the Okta Management APIs
# Version: 3.0.0
# Contact: devex-public@okta.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

Describe -tag 'Okta.PowerShell' -name 'OktaOktaGroupApi' {
    Context 'Invoke-OktaActivateGroupRule' {
        It 'Test Invoke-OktaActivateGroupRule' {
            #$TestResult = Invoke-OktaActivateGroupRule -RuleId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Add-OktaGroupOwner' {
        It 'Test Add-OktaGroupOwner' {
            #$TestResult = Add-OktaGroupOwner -GroupId "TEST_VALUE" -GroupOwner "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Add-OktaUserToGroup' {
        It 'Test Add-OktaUserToGroup' {
            #$TestResult = Add-OktaUserToGroup -GroupId "TEST_VALUE" -UserId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-OktaGroup' {
        It 'Test New-OktaGroup' {
            #$TestResult = New-OktaGroup -Group "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-OktaGroupRule' {
        It 'Test New-OktaGroupRule' {
            #$TestResult = New-OktaGroupRule -GroupRule "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-OktaDeactivateGroupRule' {
        It 'Test Invoke-OktaDeactivateGroupRule' {
            #$TestResult = Invoke-OktaDeactivateGroupRule -RuleId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-OktaDeleteGroup' {
        It 'Test Invoke-OktaDeleteGroup' {
            #$TestResult = Invoke-OktaDeleteGroup -GroupId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-OktaDeleteGroupOwner' {
        It 'Test Invoke-OktaDeleteGroupOwner' {
            #$TestResult = Invoke-OktaDeleteGroupOwner -GroupId "TEST_VALUE" -OwnerId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-OktaDeleteGroupRule' {
        It 'Test Invoke-OktaDeleteGroupRule' {
            #$TestResult = Invoke-OktaDeleteGroupRule -RuleId "TEST_VALUE" -RemoveUsers "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-OktaGroup' {
        It 'Test Get-OktaGroup' {
            #$TestResult = Get-OktaGroup -GroupId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-OktaGroupOwners' {
        It 'Test Get-OktaGroupOwners' {
            #$TestResult = Get-OktaGroupOwners -GroupId "TEST_VALUE" -Filter "TEST_VALUE" -After "TEST_VALUE" -Limit "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-OktaGroupRule' {
        It 'Test Get-OktaGroupRule' {
            #$TestResult = Get-OktaGroupRule -RuleId "TEST_VALUE" -Expand "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-OktaListAssignedApplicationsForGroup' {
        It 'Test Invoke-OktaListAssignedApplicationsForGroup' {
            #$TestResult = Invoke-OktaListAssignedApplicationsForGroup -GroupId "TEST_VALUE" -After "TEST_VALUE" -Limit "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-OktaListGroupRules' {
        It 'Test Invoke-OktaListGroupRules' {
            #$TestResult = Invoke-OktaListGroupRules -Limit "TEST_VALUE" -After "TEST_VALUE" -Search "TEST_VALUE" -Expand "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-OktaListGroupUsers' {
        It 'Test Invoke-OktaListGroupUsers' {
            #$TestResult = Invoke-OktaListGroupUsers -GroupId "TEST_VALUE" -After "TEST_VALUE" -Limit "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-OktaListGroups' {
        It 'Test Invoke-OktaListGroups' {
            #$TestResult = Invoke-OktaListGroups -Q "TEST_VALUE" -Filter "TEST_VALUE" -After "TEST_VALUE" -Limit "TEST_VALUE" -Expand "TEST_VALUE" -Search "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Remove-OktaUserFromGroup' {
        It 'Test Remove-OktaUserFromGroup' {
            #$TestResult = Remove-OktaUserFromGroup -GroupId "TEST_VALUE" -UserId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Update-OktaGroup' {
        It 'Test Update-OktaGroup' {
            #$TestResult = Update-OktaGroup -GroupId "TEST_VALUE" -Group "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Update-OktaGroupRule' {
        It 'Test Update-OktaGroupRule' {
            #$TestResult = Update-OktaGroupRule -RuleId "TEST_VALUE" -GroupRule "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

}
