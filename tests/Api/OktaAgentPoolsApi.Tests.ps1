#
# Okta Management
# Allows customers to easily access the Okta Management APIs
# Version: 3.0.0
# Contact: devex-public@okta.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

Describe -tag 'Okta.PowerShell' -name 'OktaOktaAgentPoolsApi' {
    Context 'Invoke-OktaActivateAgentPoolsUpdate' {
        It 'Test Invoke-OktaActivateAgentPoolsUpdate' {
            #$TestResult = Invoke-OktaActivateAgentPoolsUpdate -PoolId "TEST_VALUE" -UpdateId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-OktaAgentPoolsUpdate' {
        It 'Test New-OktaAgentPoolsUpdate' {
            #$TestResult = New-OktaAgentPoolsUpdate -PoolId "TEST_VALUE" -AgentPoolUpdate "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-OktaDeactivateAgentPoolsUpdate' {
        It 'Test Invoke-OktaDeactivateAgentPoolsUpdate' {
            #$TestResult = Invoke-OktaDeactivateAgentPoolsUpdate -PoolId "TEST_VALUE" -UpdateId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-OktaDeleteAgentPoolsUpdate' {
        It 'Test Invoke-OktaDeleteAgentPoolsUpdate' {
            #$TestResult = Invoke-OktaDeleteAgentPoolsUpdate -PoolId "TEST_VALUE" -UpdateId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-OktaAgentPools' {
        It 'Test Get-OktaAgentPools' {
            #$TestResult = Get-OktaAgentPools -LimitPerPoolType "TEST_VALUE" -PoolType "TEST_VALUE" -After "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-OktaAgentPoolsUpdateInstance' {
        It 'Test Get-OktaAgentPoolsUpdateInstance' {
            #$TestResult = Get-OktaAgentPoolsUpdateInstance -PoolId "TEST_VALUE" -UpdateId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-OktaAgentPoolsUpdateSettings' {
        It 'Test Get-OktaAgentPoolsUpdateSettings' {
            #$TestResult = Get-OktaAgentPoolsUpdateSettings -PoolId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-OktaAgentPoolsUpdates' {
        It 'Test Get-OktaAgentPoolsUpdates' {
            #$TestResult = Get-OktaAgentPoolsUpdates -PoolId "TEST_VALUE" -Scheduled "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Suspend-OktaAgentPoolsUpdate' {
        It 'Test Suspend-OktaAgentPoolsUpdate' {
            #$TestResult = Suspend-OktaAgentPoolsUpdate -PoolId "TEST_VALUE" -UpdateId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Resume-OktaAgentPoolsUpdate' {
        It 'Test Resume-OktaAgentPoolsUpdate' {
            #$TestResult = Resume-OktaAgentPoolsUpdate -PoolId "TEST_VALUE" -UpdateId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-OktaRetryAgentPoolsUpdate' {
        It 'Test Invoke-OktaRetryAgentPoolsUpdate' {
            #$TestResult = Invoke-OktaRetryAgentPoolsUpdate -PoolId "TEST_VALUE" -UpdateId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Set-OktaAgentPoolsUpdateSettings' {
        It 'Test Set-OktaAgentPoolsUpdateSettings' {
            #$TestResult = Set-OktaAgentPoolsUpdateSettings -PoolId "TEST_VALUE" -AgentPoolUpdateSetting "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Stop-OktaAgentPoolsUpdate' {
        It 'Test Stop-OktaAgentPoolsUpdate' {
            #$TestResult = Stop-OktaAgentPoolsUpdate -PoolId "TEST_VALUE" -UpdateId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Update-OktaAgentPoolsUpdate' {
        It 'Test Update-OktaAgentPoolsUpdate' {
            #$TestResult = Update-OktaAgentPoolsUpdate -PoolId "TEST_VALUE" -UpdateId "TEST_VALUE" -AgentPoolUpdate "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

}
