#
# Okta Management
# Allows customers to easily access the Okta Management APIs
# Version: 3.0.0
# Contact: devex-public@okta.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

Describe -tag 'PSOpenAPITools' -name 'NetworkZoneApi' {
    Context 'Invoke-ActivateNetworkZone' {
        It 'Test Invoke-ActivateNetworkZone' {
            #$TestResult = Invoke-ActivateNetworkZone -ZoneId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-NetworkZone' {
        It 'Test New-NetworkZone' {
            #$TestResult = New-NetworkZone -Zone "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-DeactivateNetworkZone' {
        It 'Test Invoke-DeactivateNetworkZone' {
            #$TestResult = Invoke-DeactivateNetworkZone -ZoneId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-DeleteNetworkZone' {
        It 'Test Invoke-DeleteNetworkZone' {
            #$TestResult = Invoke-DeleteNetworkZone -ZoneId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-NetworkZone' {
        It 'Test Get-NetworkZone' {
            #$TestResult = Get-NetworkZone -ZoneId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-ListNetworkZones' {
        It 'Test Invoke-ListNetworkZones' {
            #$TestResult = Invoke-ListNetworkZones -After "TEST_VALUE" -Limit "TEST_VALUE" -Filter "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Update-NetworkZone' {
        It 'Test Update-NetworkZone' {
            #$TestResult = Update-NetworkZone -ZoneId "TEST_VALUE" -Zone "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

}
