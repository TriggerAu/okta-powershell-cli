#
# Okta Management
# Allows customers to easily access the Okta Management APIs
# Version: 3.0.0
# Contact: devex-public@okta.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

Describe -tag 'Okta.PowerShell' -name 'OktaOktaSchemaApi' {
    Context 'Get-OktaApplicationLayout' {
        It 'Test Get-OktaApplicationLayout' {
            #$TestResult = Get-OktaApplicationLayout -AppName "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-OktaApplicationUserSchema' {
        It 'Test Get-OktaApplicationUserSchema' {
            #$TestResult = Get-OktaApplicationUserSchema -AppInstanceId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-OktaGroupSchema' {
        It 'Test Get-OktaGroupSchema' {
            #$TestResult = Get-OktaGroupSchema
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-OktaLogStreamSchema' {
        It 'Test Get-OktaLogStreamSchema' {
            #$TestResult = Get-OktaLogStreamSchema -LogStreamType "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-OktaUserSchema' {
        It 'Test Get-OktaUserSchema' {
            #$TestResult = Get-OktaUserSchema -SchemaId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-OktaListLogStreamSchemas' {
        It 'Test Invoke-OktaListLogStreamSchemas' {
            #$TestResult = Invoke-OktaListLogStreamSchemas
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Update-OktaApplicationUserProfile' {
        It 'Test Update-OktaApplicationUserProfile' {
            #$TestResult = Update-OktaApplicationUserProfile -AppInstanceId "TEST_VALUE" -Body "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Update-OktaGroupSchema' {
        It 'Test Update-OktaGroupSchema' {
            #$TestResult = Update-OktaGroupSchema -GroupSchema "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Update-OktaUserProfile' {
        It 'Test Update-OktaUserProfile' {
            #$TestResult = Update-OktaUserProfile -SchemaId "TEST_VALUE" -UserSchema "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

}
